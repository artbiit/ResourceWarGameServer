// <auto-generated>
//     Generated by the protocol buffer compiler.  DO NOT EDIT!
//     source: protocol.proto
// </auto-generated>
#pragma warning disable 1591, 0612, 3021
#region Designer generated code

using pb = global::Google.Protobuf;
using pbc = global::Google.Protobuf.Collections;
using pbr = global::Google.Protobuf.Reflection;
using scg = global::System.Collections.Generic;
namespace Protocol {

  /// <summary>Holder for reflection information generated from protocol.proto</summary>
  public static partial class ProtocolReflection {

    #region Descriptor
    /// <summary>File descriptor for protocol.proto</summary>
    public static pbr::FileDescriptor Descriptor {
      get { return descriptor; }
    }
    private static pbr::FileDescriptor descriptor;

    static ProtocolReflection() {
      byte[] descriptorData = global::System.Convert.FromBase64String(
          string.Concat(
            "Cg5wcm90b2NvbC5wcm90bxIIcHJvdG9jb2wiIAoKUzJDUGluZ1JlcRISCgpz",
            "ZXJ2ZXJUaW1lGAEgASgDIiAKCkMyU1BvbmdSZXMSEgoKY2xpZW50VGltZRgB",
            "IAEoAyI+CgxDMlNTaWduVXBSZXESEAoIbmlja25hbWUYASABKAkSCgoCaWQY",
            "AiABKAkSEAoIcGFzc3dvcmQYAyABKAkiKAoMUzJDU2lnblVwUmVzEhgKEHNp",
            "Z25VcFJlc3VsdENvZGUYASABKA0iLAoMQzJTU2lnbkluUmVxEgoKAmlkGAEg",
            "ASgJEhAKCHBhc3N3b3JkGAIgASgJImEKDFMyQ1NpZ25JblJlcxIYChBzaWdu",
            "SW5SZXN1bHRDb2RlGAEgASgNEg0KBXRva2VuGAIgASgJEhYKDmV4cGlyYXRp",
            "b25UaW1lGAMgASgEEhAKCG5pY2tuYW1lGAQgASgJIhQKEkMyU1JlZnJlc2hU",
            "b2tlblJlcSJbChJTMkNSZWZyZXNoVG9rZW5SZXMSDQoFdG9rZW4YASABKAkS",
            "FgoOZXhwaXJhdGlvblRpbWUYAiABKAQSHgoWcmVmcmVzaFRva2VuUmVzdWx0",
            "Q29kZRgDIAEoDSIPCg1DMlNTaWduT3V0UmVxIioKDVMyQ1NpZ25PdXRSZXMS",
            "GQoRc2lnbk91dFJlc3VsdENvZGUYASABKA0ioQEKCUdhbWVTdGF0ZRIMCgRn",
            "b2xkGAEgASgNEg4KBmJhc2VIcBgCIAEoDRIUCgxtb25zdGVyTGV2ZWwYBSAB",
            "KA0SDQoFc2NvcmUYBiABKA0SJwoLbW9uc3RlclBhdGgYByADKAsyEi5wcm90",
            "b2NvbC5Qb3NpdGlvbhIoCgxiYXNlUG9zaXRpb24YCCABKAsyEi5wcm90b2Nv",
            "bC5Qb3NpdGlvbiI+CghJdGVtRGF0YRIQCghpdGVtQ29kZRgBIAEoDRIQCghp",
            "dGVtVHlwZRgCIAEoDRIOCgZhbW91bnQYAyABKA0ibQoOUGxheWVyUm9vbUlu",
            "Zm8SEAoIcGxheWVySWQYASABKA0SEgoKcGxheWVyTmFtZRgCIAEoCRITCgth",
            "dmFydGFySXRlbRgDIAEoDRIRCgl0ZWFtSW5kZXgYBCABKA0SDQoFcmVhZHkY",
            "BSABKAgihwEKEVBsYXllckluaXRpYWxEYXRhEhAKCHBsYXllcklkGAEgASgN",
            "EhIKCnBsYXllck5hbWUYAiABKAkSEwoLYXZhcnRhckl0ZW0YAyABKA0SEQoJ",
            "dGVhbUluZGV4GAQgASgNEiQKCHBvc2l0aW9uGAUgASgLMhIucHJvdG9jb2wu",
            "UG9zaXRpb24ibwoLUGxheWVyU3RhdGUSEAoIcGxheWVySWQYASABKA0SEgoK",
            "YWN0aW9uVHlwZRgCIAEoDRIkCghwb3NpdGlvbhgDIAEoCzISLnByb3RvY29s",
            "LlBvc2l0aW9uEhQKDGVxdWlwcGVkSXRlbRgEIAEoDSJ6CglGaWVsZFVuaXQS",
            "CgoCaWQYASABKA0SDQoFc3RhdGUYAiABKA0SJAoIcG9zaXRpb24YAyABKAsy",
            "Ei5wcm90b2NvbC5Qb3NpdGlvbhIKCgJocBgEIAEoDRIOCgZkYW1hZ2UYBSAB",
            "KA0SEAoIdGFyZ2V0SWQYBiABKA0iKwoIUG9zaXRpb24SCQoBeBgBIAEoAhIJ",
            "CgF5GAIgASgCEgkKAXoYAyABKAIiEQoPQzJTQXV0aG9yaXplUmVxIi4KD1My",
            "Q0F1dGhvcml6ZVJlcxIbChNBdXRob3JpemVSZXN1bHRDb2RlGAEgASgNIkgK",
            "DlMyQ0luaXRpYWxOb3RpEjYKEXBsYXllckluaXRpYWxEYXRhGAEgAygLMhsu",
            "cHJvdG9jb2wuUGxheWVySW5pdGlhbERhdGEiQQoSUzJDU3luY1BsYXllcnNO",
            "b3RpEisKDHBsYXllclN0YXRlcxgBIAMoCzIVLnByb3RvY29sLlBsYXllclN0",
            "YXRlIjUKDUMyU1BsYXllck1vdmUSJAoIcG9zaXRpb24YASABKAsyEi5wcm90",
            "b2NvbC5Qb3NpdGlvbiJYChdTMkNTeW5jRnVybmFjZVN0YXRlTm90aRIRCgl0",
            "ZWFtSW5kZXgYASABKA0SGAoQZnVybmFjZVN0YXRlQ29kZRgCIAEoDRIQCghw",
            "cm9ncmVzcxgDIAEoAiJVChRTMkNTYXdtaWxsU3RhdHVzTm90aRIRCgl0ZWFt",
            "SW5kZXgYASABKA0SGAoQc2F3bWlsbFN0YXRlQ29kZRgCIAEoDRIQCghwcm9n",
            "cmVzcxgDIAEoAiJZChZTMkNXb3JrYmVuY2hTdGF0dXNOb3RpEhEKCXRlYW1J",
            "bmRleBgBIAEoDRIaChJ3b3JrYmVuY2hTdGF0ZUNvZGUYAiABKA0SEAoIcHJv",
            "Z3Jlc3MYAyABKAIiQAoSQzJTUGxheWVyQWN0aW9uUmVxEhIKCmFjdGlvblR5",
            "cGUYASABKA0SFgoOdGFyZ2V0T2JqZWN0SWQYAiABKA0iUQoSUzJDUGxheWVy",
            "QWN0aW9uUmVzEhIKCmFjdGlvblR5cGUYASABKA0SFgoOdGFyZ2V0T2JqZWN0",
            "SWQYAiABKA0SDwoHc3VjY2VzcxgDIAEoCCJyChJTMkNTcGF3bk9iamVjdE5v",
            "dGkSEAoIb2JqZWN0SWQYASABKA0SEgoKb2JqZWN0VHlwZRgCIAEoDRIQCghh",
            "cmVhVHlwZRgDIAEoDRIkCghwb3NpdGlvbhgEIAEoCzISLnByb3RvY29sLlBv",
            "c2l0aW9uIk0KE0MyU0Rlc3RvcnlPYmplY3RSZXESEAoIb2JqZWN0SWQYASAB",
            "KA0SEgoKb2JqZWN0VHlwZRgCIAEoDRIQCghhcmVhVHlwZRgDIAEoDSJOChRT",
            "MkNEZXN0b3J5T2JqZWN0Tm90aRIQCghvYmplY3RJZBgBIAEoDRISCgpvYmpl",
            "Y3RUeXBlGAIgASgNEhAKCGFyZWFUeXBlGAMgASgNIjsKFFMyQ1N5bmNGaWVs",
            "ZFVuaXROb3RpEiMKBk9iamVjdBgBIAMoCzITLnByb3RvY29sLkZpZWxkVW5p",
            "dCIRCg9DMlNTdXJyZW5kZXJSZXEiSgoPUzJDU3VycmVuZGVyUmVzEhsKE3N1",
            "cnJlbmRlclJlc3VsdENvZGUYASABKA0SGgoSc3VycmVuZGVyU3RhcnRUaW1l",
            "GAIgASgEIkAKEFMyQ1N1cnJlbmRlck5vdGkSEAoIcGxheWVySWQYASABKA0S",
            "GgoSc3VycmVuZGVyU3RhcnRUaW1lGAIgASgEIjoKD1MyQ0dhbWVPdmVyTm90",
            "aRIUCgxnYW1lT3ZlclR5cGUYASABKA0SEQoJdGVhbUluZGV4GAIgASgNIksK",
            "E0MyU01vdmVUb0FyZWFNYXBSZXESFwoPY3VycmVudEFyZWFUeXBlGAEgASgN",
            "EhsKE2Rlc3RpbmF0aW9uQXJlYVR5cGUYAiABKA0iUwoQUzJDTW92ZVRvQXJl",
            "YU1hcBIZChFqb2luTWFwUmVzdWx0Q29kZRgBIAEoDRIkCghwb3NpdGlvbhgC",
            "IAEoCzISLnByb3RvY29sLlBvc2l0aW9uIiUKD0MyU1dvcmtiZW5jaFJlcRIS",
            "CgpyZXN1bHRJdGVtGAEgASgNIi4KD1MyQ1dvcmtiZW5jaFJlcxIbChN3b3Jr",
            "YmVuY2hSZXN1bHRDb2RlGAEgASgNIjEKDUMyU0Z1cm5hY2VSZXESIAoEaXRl",
            "bRgBIAEoCzISLnByb3RvY29sLkl0ZW1EYXRhIioKDVMyQ0Z1cm5hY2VSZXMS",
            "GQoRZnVybmFjZVJlc3VsdENvZGUYASABKA0iMQoNQzJTU2F3bWlsbFJlcRIg",
            "CgRpdGVtGAEgASgLMhIucHJvdG9jb2wuSXRlbURhdGEiKgoNUzJDU2F3bWls",
            "bFJlcxIZChFzYXdtaWxsUmVzdWx0Q29kZRgBIAEoDSIlChBDMlNDcmVhdGVS",
            "b29tUmVxEhEKCWlzUHJpdmF0ZRgBIAEoCCI1ChBTMkNDcmVhdGVSb29tUmVz",
            "EhAKCGdhbWVDb2RlGAEgASgJEg8KB2dhbWVVcmwYAiABKAkiEwoRQzJTTWF0",
            "Y2hDYW5jZWxSZXEiEwoRUzJDTWF0Y2hDYW5jZWxSZXMiDQoLQzJTTWF0Y2hS",
            "ZXEiKgoLUzJDTWF0Y2hSZXMSGwoTcm9vbU1hdGNoUmVzdWx0Q29kZRgBIAEo",
            "DSJXChRTMkNNYXRjaFByb2dyZXNzTm90aRIZChFtYXRjaFByb2dyZXNzQ29k",
            "ZRgBIAEoDRITCgtlbGFwc2VkVGltZRgCIAEoBBIPCgdnYW1lVXJsGAMgASgJ",
            "IiIKDkMyU0pvaW5Sb29tUmVxEhAKCGdhbWVDb2RlGAEgASgJIj0KDlMyQ0pv",
            "aW5Sb29tUmVzEhoKEmpvaW5Sb29tUmVzdWx0Q29kZRgBIAEoDRIPCgdnYW1l",
            "VXJsGAIgASgJIhAKDkMyU1F1aXRSb29tUmVxIiMKD1MyQ1F1aXRSb29tTm90",
            "aRIQCghwbGF5ZXJJZBgBIAEoDSIlChBDMlNUZWFtQ2hhbmdlUmVxEhEKCXRl",
            "YW1JbmRleBgBIAEoDSIwChBTMkNUZWFtQ2hhbmdlUmVzEhwKFHRlYW1DaGFu",
            "Z2VSZXN1bHRDb2RlGAEgASgNIjwKD1MyQ1N5bmNSb29tTm90aRIpCgdwbGF5",
            "ZXJzGAEgAygLMhgucHJvdG9jb2wuUGxheWVyUm9vbUluZm8iKgoZQzJTUGxh",
            "eWVySXNSZWFkeUNoYW5nZVJlcRINCgVyZWFkeRgBIAEoCCJCChlTMkNQbGF5",
            "ZXJJc1JlYWR5Q2hhbmdlUmVzEiUKHXBsYXllcklzUmVhZHlDaGFuZ2VSZXN1",
            "bHRDb2RlGAEgASgNIiAKD0MyU0dhbWVTdGFydFJlcRINCgVyZWFkeRgBIAEo",
            "CCISChBTMkNHYW1lU3RhcnROb3RpIicKE0MyU0xvYWRQcm9ncmVzc05vdGkS",
            "EAoIcHJvZ3Jlc3MYASABKA0igwEKD1MyQ1N5bmNMb2FkTm90aRI8CgxzeW5j",
            "TG9hZERhdGEYASADKAsyJi5wcm90b2NvbC5TMkNTeW5jTG9hZE5vdGkuU3lu",
            "Y0xvYWREYXRhGjIKDFN5bmNMb2FkRGF0YRIQCghwbGF5ZXJJZBgBIAEoDRIQ",
            "Cghwcm9ncmVzcxgCIAEoDSJFChNTMkNNaXNzaW5nRmllbGROb3RpEhIKCnBh",
            "Y2tldFR5cGUYASABKAUSGgoSbWlzc2luZ0ZpZWxkTGVuZ3RoGAIgASgFIhYK",
            "FFMyQ05lZWRBdXRob3JpemVOb3RpYgZwcm90bzM="));
      descriptor = pbr::FileDescriptor.FromGeneratedCode(descriptorData,
          new pbr::FileDescriptor[] { },
          new pbr::GeneratedClrTypeInfo(null, null, new pbr::GeneratedClrTypeInfo[] {
            new pbr::GeneratedClrTypeInfo(typeof(global::Protocol.S2CPingReq), global::Protocol.S2CPingReq.Parser, new[]{ "ServerTime" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Protocol.C2SPongRes), global::Protocol.C2SPongRes.Parser, new[]{ "ClientTime" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Protocol.C2SSignUpReq), global::Protocol.C2SSignUpReq.Parser, new[]{ "Nickname", "Id", "Password" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Protocol.S2CSignUpRes), global::Protocol.S2CSignUpRes.Parser, new[]{ "SignUpResultCode" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Protocol.C2SSignInReq), global::Protocol.C2SSignInReq.Parser, new[]{ "Id", "Password" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Protocol.S2CSignInRes), global::Protocol.S2CSignInRes.Parser, new[]{ "SignInResultCode", "Token", "ExpirationTime", "Nickname" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Protocol.C2SRefreshTokenReq), global::Protocol.C2SRefreshTokenReq.Parser, null, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Protocol.S2CRefreshTokenRes), global::Protocol.S2CRefreshTokenRes.Parser, new[]{ "Token", "ExpirationTime", "RefreshTokenResultCode" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Protocol.C2SSignOutReq), global::Protocol.C2SSignOutReq.Parser, null, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Protocol.S2CSignOutRes), global::Protocol.S2CSignOutRes.Parser, new[]{ "SignOutResultCode" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Protocol.GameState), global::Protocol.GameState.Parser, new[]{ "Gold", "BaseHp", "MonsterLevel", "Score", "MonsterPath", "BasePosition" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Protocol.ItemData), global::Protocol.ItemData.Parser, new[]{ "ItemCode", "ItemType", "Amount" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Protocol.PlayerRoomInfo), global::Protocol.PlayerRoomInfo.Parser, new[]{ "PlayerId", "PlayerName", "AvartarItem", "TeamIndex", "Ready" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Protocol.PlayerInitialData), global::Protocol.PlayerInitialData.Parser, new[]{ "PlayerId", "PlayerName", "AvartarItem", "TeamIndex", "Position" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Protocol.PlayerState), global::Protocol.PlayerState.Parser, new[]{ "PlayerId", "ActionType", "Position", "EquippedItem" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Protocol.FieldUnit), global::Protocol.FieldUnit.Parser, new[]{ "Id", "State", "Position", "Hp", "Damage", "TargetId" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Protocol.Position), global::Protocol.Position.Parser, new[]{ "X", "Y", "Z" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Protocol.C2SAuthorizeReq), global::Protocol.C2SAuthorizeReq.Parser, null, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Protocol.S2CAuthorizeRes), global::Protocol.S2CAuthorizeRes.Parser, new[]{ "AuthorizeResultCode" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Protocol.S2CInitialNoti), global::Protocol.S2CInitialNoti.Parser, new[]{ "PlayerInitialData" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Protocol.S2CSyncPlayersNoti), global::Protocol.S2CSyncPlayersNoti.Parser, new[]{ "PlayerStates" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Protocol.C2SPlayerMove), global::Protocol.C2SPlayerMove.Parser, new[]{ "Position" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Protocol.S2CSyncFurnaceStateNoti), global::Protocol.S2CSyncFurnaceStateNoti.Parser, new[]{ "TeamIndex", "FurnaceStateCode", "Progress" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Protocol.S2CSawmillStatusNoti), global::Protocol.S2CSawmillStatusNoti.Parser, new[]{ "TeamIndex", "SawmillStateCode", "Progress" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Protocol.S2CWorkbenchStatusNoti), global::Protocol.S2CWorkbenchStatusNoti.Parser, new[]{ "TeamIndex", "WorkbenchStateCode", "Progress" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Protocol.C2SPlayerActionReq), global::Protocol.C2SPlayerActionReq.Parser, new[]{ "ActionType", "TargetObjectId" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Protocol.S2CPlayerActionRes), global::Protocol.S2CPlayerActionRes.Parser, new[]{ "ActionType", "TargetObjectId", "Success" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Protocol.S2CSpawnObjectNoti), global::Protocol.S2CSpawnObjectNoti.Parser, new[]{ "ObjectId", "ObjectType", "AreaType", "Position" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Protocol.C2SDestoryObjectReq), global::Protocol.C2SDestoryObjectReq.Parser, new[]{ "ObjectId", "ObjectType", "AreaType" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Protocol.S2CDestoryObjectNoti), global::Protocol.S2CDestoryObjectNoti.Parser, new[]{ "ObjectId", "ObjectType", "AreaType" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Protocol.S2CSyncFieldUnitNoti), global::Protocol.S2CSyncFieldUnitNoti.Parser, new[]{ "Object" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Protocol.C2SSurrenderReq), global::Protocol.C2SSurrenderReq.Parser, null, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Protocol.S2CSurrenderRes), global::Protocol.S2CSurrenderRes.Parser, new[]{ "SurrenderResultCode", "SurrenderStartTime" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Protocol.S2CSurrenderNoti), global::Protocol.S2CSurrenderNoti.Parser, new[]{ "PlayerId", "SurrenderStartTime" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Protocol.S2CGameOverNoti), global::Protocol.S2CGameOverNoti.Parser, new[]{ "GameOverType", "TeamIndex" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Protocol.C2SMoveToAreaMapReq), global::Protocol.C2SMoveToAreaMapReq.Parser, new[]{ "CurrentAreaType", "DestinationAreaType" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Protocol.S2CMoveToAreaMap), global::Protocol.S2CMoveToAreaMap.Parser, new[]{ "JoinMapResultCode", "Position" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Protocol.C2SWorkbenchReq), global::Protocol.C2SWorkbenchReq.Parser, new[]{ "ResultItem" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Protocol.S2CWorkbenchRes), global::Protocol.S2CWorkbenchRes.Parser, new[]{ "WorkbenchResultCode" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Protocol.C2SFurnaceReq), global::Protocol.C2SFurnaceReq.Parser, new[]{ "Item" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Protocol.S2CFurnaceRes), global::Protocol.S2CFurnaceRes.Parser, new[]{ "FurnaceResultCode" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Protocol.C2SSawmillReq), global::Protocol.C2SSawmillReq.Parser, new[]{ "Item" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Protocol.S2CSawmillRes), global::Protocol.S2CSawmillRes.Parser, new[]{ "SawmillResultCode" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Protocol.C2SCreateRoomReq), global::Protocol.C2SCreateRoomReq.Parser, new[]{ "IsPrivate" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Protocol.S2CCreateRoomRes), global::Protocol.S2CCreateRoomRes.Parser, new[]{ "GameCode", "GameUrl" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Protocol.C2SMatchCancelReq), global::Protocol.C2SMatchCancelReq.Parser, null, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Protocol.S2CMatchCancelRes), global::Protocol.S2CMatchCancelRes.Parser, null, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Protocol.C2SMatchReq), global::Protocol.C2SMatchReq.Parser, null, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Protocol.S2CMatchRes), global::Protocol.S2CMatchRes.Parser, new[]{ "RoomMatchResultCode" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Protocol.S2CMatchProgressNoti), global::Protocol.S2CMatchProgressNoti.Parser, new[]{ "MatchProgressCode", "ElapsedTime", "GameUrl" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Protocol.C2SJoinRoomReq), global::Protocol.C2SJoinRoomReq.Parser, new[]{ "GameCode" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Protocol.S2CJoinRoomRes), global::Protocol.S2CJoinRoomRes.Parser, new[]{ "JoinRoomResultCode", "GameUrl" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Protocol.C2SQuitRoomReq), global::Protocol.C2SQuitRoomReq.Parser, null, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Protocol.S2CQuitRoomNoti), global::Protocol.S2CQuitRoomNoti.Parser, new[]{ "PlayerId" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Protocol.C2STeamChangeReq), global::Protocol.C2STeamChangeReq.Parser, new[]{ "TeamIndex" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Protocol.S2CTeamChangeRes), global::Protocol.S2CTeamChangeRes.Parser, new[]{ "TeamChangeResultCode" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Protocol.S2CSyncRoomNoti), global::Protocol.S2CSyncRoomNoti.Parser, new[]{ "Players" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Protocol.C2SPlayerIsReadyChangeReq), global::Protocol.C2SPlayerIsReadyChangeReq.Parser, new[]{ "Ready" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Protocol.S2CPlayerIsReadyChangeRes), global::Protocol.S2CPlayerIsReadyChangeRes.Parser, new[]{ "PlayerIsReadyChangeResultCode" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Protocol.C2SGameStartReq), global::Protocol.C2SGameStartReq.Parser, new[]{ "Ready" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Protocol.S2CGameStartNoti), global::Protocol.S2CGameStartNoti.Parser, null, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Protocol.C2SLoadProgressNoti), global::Protocol.C2SLoadProgressNoti.Parser, new[]{ "Progress" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Protocol.S2CSyncLoadNoti), global::Protocol.S2CSyncLoadNoti.Parser, new[]{ "SyncLoadData" }, null, null, null, new pbr::GeneratedClrTypeInfo[] { new pbr::GeneratedClrTypeInfo(typeof(global::Protocol.S2CSyncLoadNoti.Types.SyncLoadData), global::Protocol.S2CSyncLoadNoti.Types.SyncLoadData.Parser, new[]{ "PlayerId", "Progress" }, null, null, null, null)}),
            new pbr::GeneratedClrTypeInfo(typeof(global::Protocol.S2CMissingFieldNoti), global::Protocol.S2CMissingFieldNoti.Parser, new[]{ "PacketType", "MissingFieldLength" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Protocol.S2CNeedAuthorizeNoti), global::Protocol.S2CNeedAuthorizeNoti.Parser, null, null, null, null, null)
          }));
    }
    #endregion

  }
  #region Messages
  /// <summary>
  /// Ping 응답
  /// </summary>
  public sealed partial class S2CPingReq : pb::IMessage<S2CPingReq> {
    private static readonly pb::MessageParser<S2CPingReq> _parser = new pb::MessageParser<S2CPingReq>(() => new S2CPingReq());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<S2CPingReq> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Protocol.ProtocolReflection.Descriptor.MessageTypes[0]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public S2CPingReq() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public S2CPingReq(S2CPingReq other) : this() {
      serverTime_ = other.serverTime_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public S2CPingReq Clone() {
      return new S2CPingReq(this);
    }

    /// <summary>Field number for the "serverTime" field.</summary>
    public const int ServerTimeFieldNumber = 1;
    private long serverTime_;
    /// <summary>
    /// UTC+0 Unix timestamp 서버가 먼저 요청을 보냄, 헬스체크 용도, 해당 클라가 살아 있는 지 확인 하기 위해
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public long ServerTime {
      get { return serverTime_; }
      set {
        serverTime_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as S2CPingReq);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(S2CPingReq other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (ServerTime != other.ServerTime) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (ServerTime != 0L) hash ^= ServerTime.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (ServerTime != 0L) {
        output.WriteRawTag(8);
        output.WriteInt64(ServerTime);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (ServerTime != 0L) {
        size += 1 + pb::CodedOutputStream.ComputeInt64Size(ServerTime);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(S2CPingReq other) {
      if (other == null) {
        return;
      }
      if (other.ServerTime != 0L) {
        ServerTime = other.ServerTime;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 8: {
            ServerTime = input.ReadInt64();
            break;
          }
        }
      }
    }

  }

  /// <summary>
  /// Pong 응답
  /// </summary>
  public sealed partial class C2SPongRes : pb::IMessage<C2SPongRes> {
    private static readonly pb::MessageParser<C2SPongRes> _parser = new pb::MessageParser<C2SPongRes>(() => new C2SPongRes());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<C2SPongRes> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Protocol.ProtocolReflection.Descriptor.MessageTypes[1]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public C2SPongRes() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public C2SPongRes(C2SPongRes other) : this() {
      clientTime_ = other.clientTime_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public C2SPongRes Clone() {
      return new C2SPongRes(this);
    }

    /// <summary>Field number for the "clientTime" field.</summary>
    public const int ClientTimeFieldNumber = 1;
    private long clientTime_;
    /// <summary>
    /// 클라이언트 시간
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public long ClientTime {
      get { return clientTime_; }
      set {
        clientTime_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as C2SPongRes);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(C2SPongRes other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (ClientTime != other.ClientTime) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (ClientTime != 0L) hash ^= ClientTime.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (ClientTime != 0L) {
        output.WriteRawTag(8);
        output.WriteInt64(ClientTime);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (ClientTime != 0L) {
        size += 1 + pb::CodedOutputStream.ComputeInt64Size(ClientTime);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(C2SPongRes other) {
      if (other == null) {
        return;
      }
      if (other.ClientTime != 0L) {
        ClientTime = other.ClientTime;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 8: {
            ClientTime = input.ReadInt64();
            break;
          }
        }
      }
    }

  }

  /// <summary>
  /// 회원가입 요청
  /// </summary>
  public sealed partial class C2SSignUpReq : pb::IMessage<C2SSignUpReq> {
    private static readonly pb::MessageParser<C2SSignUpReq> _parser = new pb::MessageParser<C2SSignUpReq>(() => new C2SSignUpReq());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<C2SSignUpReq> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Protocol.ProtocolReflection.Descriptor.MessageTypes[2]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public C2SSignUpReq() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public C2SSignUpReq(C2SSignUpReq other) : this() {
      nickname_ = other.nickname_;
      id_ = other.id_;
      password_ = other.password_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public C2SSignUpReq Clone() {
      return new C2SSignUpReq(this);
    }

    /// <summary>Field number for the "nickname" field.</summary>
    public const int NicknameFieldNumber = 1;
    private string nickname_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string Nickname {
      get { return nickname_; }
      set {
        nickname_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "id" field.</summary>
    public const int IdFieldNumber = 2;
    private string id_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string Id {
      get { return id_; }
      set {
        id_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "password" field.</summary>
    public const int PasswordFieldNumber = 3;
    private string password_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string Password {
      get { return password_; }
      set {
        password_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as C2SSignUpReq);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(C2SSignUpReq other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (Nickname != other.Nickname) return false;
      if (Id != other.Id) return false;
      if (Password != other.Password) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (Nickname.Length != 0) hash ^= Nickname.GetHashCode();
      if (Id.Length != 0) hash ^= Id.GetHashCode();
      if (Password.Length != 0) hash ^= Password.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (Nickname.Length != 0) {
        output.WriteRawTag(10);
        output.WriteString(Nickname);
      }
      if (Id.Length != 0) {
        output.WriteRawTag(18);
        output.WriteString(Id);
      }
      if (Password.Length != 0) {
        output.WriteRawTag(26);
        output.WriteString(Password);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (Nickname.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(Nickname);
      }
      if (Id.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(Id);
      }
      if (Password.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(Password);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(C2SSignUpReq other) {
      if (other == null) {
        return;
      }
      if (other.Nickname.Length != 0) {
        Nickname = other.Nickname;
      }
      if (other.Id.Length != 0) {
        Id = other.Id;
      }
      if (other.Password.Length != 0) {
        Password = other.Password;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            Nickname = input.ReadString();
            break;
          }
          case 18: {
            Id = input.ReadString();
            break;
          }
          case 26: {
            Password = input.ReadString();
            break;
          }
        }
      }
    }

  }

  /// <summary>
  /// 회원가입 결과
  /// </summary>
  public sealed partial class S2CSignUpRes : pb::IMessage<S2CSignUpRes> {
    private static readonly pb::MessageParser<S2CSignUpRes> _parser = new pb::MessageParser<S2CSignUpRes>(() => new S2CSignUpRes());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<S2CSignUpRes> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Protocol.ProtocolReflection.Descriptor.MessageTypes[3]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public S2CSignUpRes() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public S2CSignUpRes(S2CSignUpRes other) : this() {
      signUpResultCode_ = other.signUpResultCode_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public S2CSignUpRes Clone() {
      return new S2CSignUpRes(this);
    }

    /// <summary>Field number for the "signUpResultCode" field.</summary>
    public const int SignUpResultCodeFieldNumber = 1;
    private uint signUpResultCode_;
    /// <summary>
    /// 0이면 성공
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public uint SignUpResultCode {
      get { return signUpResultCode_; }
      set {
        signUpResultCode_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as S2CSignUpRes);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(S2CSignUpRes other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (SignUpResultCode != other.SignUpResultCode) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (SignUpResultCode != 0) hash ^= SignUpResultCode.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (SignUpResultCode != 0) {
        output.WriteRawTag(8);
        output.WriteUInt32(SignUpResultCode);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (SignUpResultCode != 0) {
        size += 1 + pb::CodedOutputStream.ComputeUInt32Size(SignUpResultCode);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(S2CSignUpRes other) {
      if (other == null) {
        return;
      }
      if (other.SignUpResultCode != 0) {
        SignUpResultCode = other.SignUpResultCode;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 8: {
            SignUpResultCode = input.ReadUInt32();
            break;
          }
        }
      }
    }

  }

  /// <summary>
  /// 로그인 요청
  /// </summary>
  public sealed partial class C2SSignInReq : pb::IMessage<C2SSignInReq> {
    private static readonly pb::MessageParser<C2SSignInReq> _parser = new pb::MessageParser<C2SSignInReq>(() => new C2SSignInReq());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<C2SSignInReq> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Protocol.ProtocolReflection.Descriptor.MessageTypes[4]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public C2SSignInReq() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public C2SSignInReq(C2SSignInReq other) : this() {
      id_ = other.id_;
      password_ = other.password_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public C2SSignInReq Clone() {
      return new C2SSignInReq(this);
    }

    /// <summary>Field number for the "id" field.</summary>
    public const int IdFieldNumber = 1;
    private string id_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string Id {
      get { return id_; }
      set {
        id_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "password" field.</summary>
    public const int PasswordFieldNumber = 2;
    private string password_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string Password {
      get { return password_; }
      set {
        password_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as C2SSignInReq);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(C2SSignInReq other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (Id != other.Id) return false;
      if (Password != other.Password) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (Id.Length != 0) hash ^= Id.GetHashCode();
      if (Password.Length != 0) hash ^= Password.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (Id.Length != 0) {
        output.WriteRawTag(10);
        output.WriteString(Id);
      }
      if (Password.Length != 0) {
        output.WriteRawTag(18);
        output.WriteString(Password);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (Id.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(Id);
      }
      if (Password.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(Password);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(C2SSignInReq other) {
      if (other == null) {
        return;
      }
      if (other.Id.Length != 0) {
        Id = other.Id;
      }
      if (other.Password.Length != 0) {
        Password = other.Password;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            Id = input.ReadString();
            break;
          }
          case 18: {
            Password = input.ReadString();
            break;
          }
        }
      }
    }

  }

  /// <summary>
  /// 로그인 결과 (토큰 발급)
  /// </summary>
  public sealed partial class S2CSignInRes : pb::IMessage<S2CSignInRes> {
    private static readonly pb::MessageParser<S2CSignInRes> _parser = new pb::MessageParser<S2CSignInRes>(() => new S2CSignInRes());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<S2CSignInRes> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Protocol.ProtocolReflection.Descriptor.MessageTypes[5]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public S2CSignInRes() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public S2CSignInRes(S2CSignInRes other) : this() {
      signInResultCode_ = other.signInResultCode_;
      token_ = other.token_;
      expirationTime_ = other.expirationTime_;
      nickname_ = other.nickname_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public S2CSignInRes Clone() {
      return new S2CSignInRes(this);
    }

    /// <summary>Field number for the "signInResultCode" field.</summary>
    public const int SignInResultCodeFieldNumber = 1;
    private uint signInResultCode_;
    /// <summary>
    /// 0이면 성공
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public uint SignInResultCode {
      get { return signInResultCode_; }
      set {
        signInResultCode_ = value;
      }
    }

    /// <summary>Field number for the "token" field.</summary>
    public const int TokenFieldNumber = 2;
    private string token_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string Token {
      get { return token_; }
      set {
        token_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "expirationTime" field.</summary>
    public const int ExpirationTimeFieldNumber = 3;
    private ulong expirationTime_;
    /// <summary>
    /// 만료시간
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public ulong ExpirationTime {
      get { return expirationTime_; }
      set {
        expirationTime_ = value;
      }
    }

    /// <summary>Field number for the "nickname" field.</summary>
    public const int NicknameFieldNumber = 4;
    private string nickname_ = "";
    /// <summary>
    ///유저 닉네임
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string Nickname {
      get { return nickname_; }
      set {
        nickname_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as S2CSignInRes);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(S2CSignInRes other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (SignInResultCode != other.SignInResultCode) return false;
      if (Token != other.Token) return false;
      if (ExpirationTime != other.ExpirationTime) return false;
      if (Nickname != other.Nickname) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (SignInResultCode != 0) hash ^= SignInResultCode.GetHashCode();
      if (Token.Length != 0) hash ^= Token.GetHashCode();
      if (ExpirationTime != 0UL) hash ^= ExpirationTime.GetHashCode();
      if (Nickname.Length != 0) hash ^= Nickname.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (SignInResultCode != 0) {
        output.WriteRawTag(8);
        output.WriteUInt32(SignInResultCode);
      }
      if (Token.Length != 0) {
        output.WriteRawTag(18);
        output.WriteString(Token);
      }
      if (ExpirationTime != 0UL) {
        output.WriteRawTag(24);
        output.WriteUInt64(ExpirationTime);
      }
      if (Nickname.Length != 0) {
        output.WriteRawTag(34);
        output.WriteString(Nickname);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (SignInResultCode != 0) {
        size += 1 + pb::CodedOutputStream.ComputeUInt32Size(SignInResultCode);
      }
      if (Token.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(Token);
      }
      if (ExpirationTime != 0UL) {
        size += 1 + pb::CodedOutputStream.ComputeUInt64Size(ExpirationTime);
      }
      if (Nickname.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(Nickname);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(S2CSignInRes other) {
      if (other == null) {
        return;
      }
      if (other.SignInResultCode != 0) {
        SignInResultCode = other.SignInResultCode;
      }
      if (other.Token.Length != 0) {
        Token = other.Token;
      }
      if (other.ExpirationTime != 0UL) {
        ExpirationTime = other.ExpirationTime;
      }
      if (other.Nickname.Length != 0) {
        Nickname = other.Nickname;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 8: {
            SignInResultCode = input.ReadUInt32();
            break;
          }
          case 18: {
            Token = input.ReadString();
            break;
          }
          case 24: {
            ExpirationTime = input.ReadUInt64();
            break;
          }
          case 34: {
            Nickname = input.ReadString();
            break;
          }
        }
      }
    }

  }

  public sealed partial class C2SRefreshTokenReq : pb::IMessage<C2SRefreshTokenReq> {
    private static readonly pb::MessageParser<C2SRefreshTokenReq> _parser = new pb::MessageParser<C2SRefreshTokenReq>(() => new C2SRefreshTokenReq());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<C2SRefreshTokenReq> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Protocol.ProtocolReflection.Descriptor.MessageTypes[6]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public C2SRefreshTokenReq() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public C2SRefreshTokenReq(C2SRefreshTokenReq other) : this() {
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public C2SRefreshTokenReq Clone() {
      return new C2SRefreshTokenReq(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as C2SRefreshTokenReq);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(C2SRefreshTokenReq other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(C2SRefreshTokenReq other) {
      if (other == null) {
        return;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
        }
      }
    }

  }

  /// <summary>
  /// 토큰 재발급 결과
  /// </summary>
  public sealed partial class S2CRefreshTokenRes : pb::IMessage<S2CRefreshTokenRes> {
    private static readonly pb::MessageParser<S2CRefreshTokenRes> _parser = new pb::MessageParser<S2CRefreshTokenRes>(() => new S2CRefreshTokenRes());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<S2CRefreshTokenRes> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Protocol.ProtocolReflection.Descriptor.MessageTypes[7]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public S2CRefreshTokenRes() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public S2CRefreshTokenRes(S2CRefreshTokenRes other) : this() {
      token_ = other.token_;
      expirationTime_ = other.expirationTime_;
      refreshTokenResultCode_ = other.refreshTokenResultCode_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public S2CRefreshTokenRes Clone() {
      return new S2CRefreshTokenRes(this);
    }

    /// <summary>Field number for the "token" field.</summary>
    public const int TokenFieldNumber = 1;
    private string token_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string Token {
      get { return token_; }
      set {
        token_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "expirationTime" field.</summary>
    public const int ExpirationTimeFieldNumber = 2;
    private ulong expirationTime_;
    /// <summary>
    /// 만료시간 다시 정해서 보내주는거 (게임 시작하면 한번더 널널하게 보내주기)
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public ulong ExpirationTime {
      get { return expirationTime_; }
      set {
        expirationTime_ = value;
      }
    }

    /// <summary>Field number for the "refreshTokenResultCode" field.</summary>
    public const int RefreshTokenResultCodeFieldNumber = 3;
    private uint refreshTokenResultCode_;
    /// <summary>
    /// 0이면 성공
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public uint RefreshTokenResultCode {
      get { return refreshTokenResultCode_; }
      set {
        refreshTokenResultCode_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as S2CRefreshTokenRes);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(S2CRefreshTokenRes other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (Token != other.Token) return false;
      if (ExpirationTime != other.ExpirationTime) return false;
      if (RefreshTokenResultCode != other.RefreshTokenResultCode) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (Token.Length != 0) hash ^= Token.GetHashCode();
      if (ExpirationTime != 0UL) hash ^= ExpirationTime.GetHashCode();
      if (RefreshTokenResultCode != 0) hash ^= RefreshTokenResultCode.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (Token.Length != 0) {
        output.WriteRawTag(10);
        output.WriteString(Token);
      }
      if (ExpirationTime != 0UL) {
        output.WriteRawTag(16);
        output.WriteUInt64(ExpirationTime);
      }
      if (RefreshTokenResultCode != 0) {
        output.WriteRawTag(24);
        output.WriteUInt32(RefreshTokenResultCode);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (Token.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(Token);
      }
      if (ExpirationTime != 0UL) {
        size += 1 + pb::CodedOutputStream.ComputeUInt64Size(ExpirationTime);
      }
      if (RefreshTokenResultCode != 0) {
        size += 1 + pb::CodedOutputStream.ComputeUInt32Size(RefreshTokenResultCode);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(S2CRefreshTokenRes other) {
      if (other == null) {
        return;
      }
      if (other.Token.Length != 0) {
        Token = other.Token;
      }
      if (other.ExpirationTime != 0UL) {
        ExpirationTime = other.ExpirationTime;
      }
      if (other.RefreshTokenResultCode != 0) {
        RefreshTokenResultCode = other.RefreshTokenResultCode;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            Token = input.ReadString();
            break;
          }
          case 16: {
            ExpirationTime = input.ReadUInt64();
            break;
          }
          case 24: {
            RefreshTokenResultCode = input.ReadUInt32();
            break;
          }
        }
      }
    }

  }

  public sealed partial class C2SSignOutReq : pb::IMessage<C2SSignOutReq> {
    private static readonly pb::MessageParser<C2SSignOutReq> _parser = new pb::MessageParser<C2SSignOutReq>(() => new C2SSignOutReq());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<C2SSignOutReq> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Protocol.ProtocolReflection.Descriptor.MessageTypes[8]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public C2SSignOutReq() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public C2SSignOutReq(C2SSignOutReq other) : this() {
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public C2SSignOutReq Clone() {
      return new C2SSignOutReq(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as C2SSignOutReq);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(C2SSignOutReq other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(C2SSignOutReq other) {
      if (other == null) {
        return;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
        }
      }
    }

  }

  public sealed partial class S2CSignOutRes : pb::IMessage<S2CSignOutRes> {
    private static readonly pb::MessageParser<S2CSignOutRes> _parser = new pb::MessageParser<S2CSignOutRes>(() => new S2CSignOutRes());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<S2CSignOutRes> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Protocol.ProtocolReflection.Descriptor.MessageTypes[9]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public S2CSignOutRes() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public S2CSignOutRes(S2CSignOutRes other) : this() {
      signOutResultCode_ = other.signOutResultCode_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public S2CSignOutRes Clone() {
      return new S2CSignOutRes(this);
    }

    /// <summary>Field number for the "signOutResultCode" field.</summary>
    public const int SignOutResultCodeFieldNumber = 1;
    private uint signOutResultCode_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public uint SignOutResultCode {
      get { return signOutResultCode_; }
      set {
        signOutResultCode_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as S2CSignOutRes);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(S2CSignOutRes other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (SignOutResultCode != other.SignOutResultCode) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (SignOutResultCode != 0) hash ^= SignOutResultCode.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (SignOutResultCode != 0) {
        output.WriteRawTag(8);
        output.WriteUInt32(SignOutResultCode);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (SignOutResultCode != 0) {
        size += 1 + pb::CodedOutputStream.ComputeUInt32Size(SignOutResultCode);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(S2CSignOutRes other) {
      if (other == null) {
        return;
      }
      if (other.SignOutResultCode != 0) {
        SignOutResultCode = other.SignOutResultCode;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 8: {
            SignOutResultCode = input.ReadUInt32();
            break;
          }
        }
      }
    }

  }

  /// <summary>
  ///Game//Game//Game//Game//Game//Game//Game//Game//Game//Game//Game//Game//Game//Game//Game//Game//Game//Game//
  ///Game//Game//Game//Game//Game//Game//Game//Game//Game//Game//Game//Game//Game//Game//Game//Game//Game//Game//
  ///Game//Game//Game//Game//Game//Game//Game//Game//Game//Game//Game//Game//Game//Game//Game//Game//Game//Game//
  ///Game//Game//Game//Game//Game//Game//Game//Game//Game//Game//Game//Game//Game//Game//Game//Game//Game//Game//
  /// GameState 메시지
  /// </summary>
  public sealed partial class GameState : pb::IMessage<GameState> {
    private static readonly pb::MessageParser<GameState> _parser = new pb::MessageParser<GameState>(() => new GameState());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<GameState> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Protocol.ProtocolReflection.Descriptor.MessageTypes[10]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public GameState() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public GameState(GameState other) : this() {
      gold_ = other.gold_;
      baseHp_ = other.baseHp_;
      monsterLevel_ = other.monsterLevel_;
      score_ = other.score_;
      monsterPath_ = other.monsterPath_.Clone();
      basePosition_ = other.basePosition_ != null ? other.basePosition_.Clone() : null;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public GameState Clone() {
      return new GameState(this);
    }

    /// <summary>Field number for the "gold" field.</summary>
    public const int GoldFieldNumber = 1;
    private uint gold_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public uint Gold {
      get { return gold_; }
      set {
        gold_ = value;
      }
    }

    /// <summary>Field number for the "baseHp" field.</summary>
    public const int BaseHpFieldNumber = 2;
    private uint baseHp_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public uint BaseHp {
      get { return baseHp_; }
      set {
        baseHp_ = value;
      }
    }

    /// <summary>Field number for the "monsterLevel" field.</summary>
    public const int MonsterLevelFieldNumber = 5;
    private uint monsterLevel_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public uint MonsterLevel {
      get { return monsterLevel_; }
      set {
        monsterLevel_ = value;
      }
    }

    /// <summary>Field number for the "score" field.</summary>
    public const int ScoreFieldNumber = 6;
    private uint score_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public uint Score {
      get { return score_; }
      set {
        score_ = value;
      }
    }

    /// <summary>Field number for the "monsterPath" field.</summary>
    public const int MonsterPathFieldNumber = 7;
    private static readonly pb::FieldCodec<global::Protocol.Position> _repeated_monsterPath_codec
        = pb::FieldCodec.ForMessage(58, global::Protocol.Position.Parser);
    private readonly pbc::RepeatedField<global::Protocol.Position> monsterPath_ = new pbc::RepeatedField<global::Protocol.Position>();
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public pbc::RepeatedField<global::Protocol.Position> MonsterPath {
      get { return monsterPath_; }
    }

    /// <summary>Field number for the "basePosition" field.</summary>
    public const int BasePositionFieldNumber = 8;
    private global::Protocol.Position basePosition_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::Protocol.Position BasePosition {
      get { return basePosition_; }
      set {
        basePosition_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as GameState);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(GameState other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (Gold != other.Gold) return false;
      if (BaseHp != other.BaseHp) return false;
      if (MonsterLevel != other.MonsterLevel) return false;
      if (Score != other.Score) return false;
      if(!monsterPath_.Equals(other.monsterPath_)) return false;
      if (!object.Equals(BasePosition, other.BasePosition)) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (Gold != 0) hash ^= Gold.GetHashCode();
      if (BaseHp != 0) hash ^= BaseHp.GetHashCode();
      if (MonsterLevel != 0) hash ^= MonsterLevel.GetHashCode();
      if (Score != 0) hash ^= Score.GetHashCode();
      hash ^= monsterPath_.GetHashCode();
      if (basePosition_ != null) hash ^= BasePosition.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (Gold != 0) {
        output.WriteRawTag(8);
        output.WriteUInt32(Gold);
      }
      if (BaseHp != 0) {
        output.WriteRawTag(16);
        output.WriteUInt32(BaseHp);
      }
      if (MonsterLevel != 0) {
        output.WriteRawTag(40);
        output.WriteUInt32(MonsterLevel);
      }
      if (Score != 0) {
        output.WriteRawTag(48);
        output.WriteUInt32(Score);
      }
      monsterPath_.WriteTo(output, _repeated_monsterPath_codec);
      if (basePosition_ != null) {
        output.WriteRawTag(66);
        output.WriteMessage(BasePosition);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (Gold != 0) {
        size += 1 + pb::CodedOutputStream.ComputeUInt32Size(Gold);
      }
      if (BaseHp != 0) {
        size += 1 + pb::CodedOutputStream.ComputeUInt32Size(BaseHp);
      }
      if (MonsterLevel != 0) {
        size += 1 + pb::CodedOutputStream.ComputeUInt32Size(MonsterLevel);
      }
      if (Score != 0) {
        size += 1 + pb::CodedOutputStream.ComputeUInt32Size(Score);
      }
      size += monsterPath_.CalculateSize(_repeated_monsterPath_codec);
      if (basePosition_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(BasePosition);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(GameState other) {
      if (other == null) {
        return;
      }
      if (other.Gold != 0) {
        Gold = other.Gold;
      }
      if (other.BaseHp != 0) {
        BaseHp = other.BaseHp;
      }
      if (other.MonsterLevel != 0) {
        MonsterLevel = other.MonsterLevel;
      }
      if (other.Score != 0) {
        Score = other.Score;
      }
      monsterPath_.Add(other.monsterPath_);
      if (other.basePosition_ != null) {
        if (basePosition_ == null) {
          BasePosition = new global::Protocol.Position();
        }
        BasePosition.MergeFrom(other.BasePosition);
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 8: {
            Gold = input.ReadUInt32();
            break;
          }
          case 16: {
            BaseHp = input.ReadUInt32();
            break;
          }
          case 40: {
            MonsterLevel = input.ReadUInt32();
            break;
          }
          case 48: {
            Score = input.ReadUInt32();
            break;
          }
          case 58: {
            monsterPath_.AddEntriesFrom(input, _repeated_monsterPath_codec);
            break;
          }
          case 66: {
            if (basePosition_ == null) {
              BasePosition = new global::Protocol.Position();
            }
            input.ReadMessage(BasePosition);
            break;
          }
        }
      }
    }

  }

  /// <summary>
  /// 아이템 데이터
  /// </summary>
  public sealed partial class ItemData : pb::IMessage<ItemData> {
    private static readonly pb::MessageParser<ItemData> _parser = new pb::MessageParser<ItemData>(() => new ItemData());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<ItemData> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Protocol.ProtocolReflection.Descriptor.MessageTypes[11]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public ItemData() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public ItemData(ItemData other) : this() {
      itemCode_ = other.itemCode_;
      itemType_ = other.itemType_;
      amount_ = other.amount_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public ItemData Clone() {
      return new ItemData(this);
    }

    /// <summary>Field number for the "itemCode" field.</summary>
    public const int ItemCodeFieldNumber = 1;
    private uint itemCode_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public uint ItemCode {
      get { return itemCode_; }
      set {
        itemCode_ = value;
      }
    }

    /// <summary>Field number for the "itemType" field.</summary>
    public const int ItemTypeFieldNumber = 2;
    private uint itemType_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public uint ItemType {
      get { return itemType_; }
      set {
        itemType_ = value;
      }
    }

    /// <summary>Field number for the "amount" field.</summary>
    public const int AmountFieldNumber = 3;
    private uint amount_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public uint Amount {
      get { return amount_; }
      set {
        amount_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as ItemData);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(ItemData other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (ItemCode != other.ItemCode) return false;
      if (ItemType != other.ItemType) return false;
      if (Amount != other.Amount) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (ItemCode != 0) hash ^= ItemCode.GetHashCode();
      if (ItemType != 0) hash ^= ItemType.GetHashCode();
      if (Amount != 0) hash ^= Amount.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (ItemCode != 0) {
        output.WriteRawTag(8);
        output.WriteUInt32(ItemCode);
      }
      if (ItemType != 0) {
        output.WriteRawTag(16);
        output.WriteUInt32(ItemType);
      }
      if (Amount != 0) {
        output.WriteRawTag(24);
        output.WriteUInt32(Amount);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (ItemCode != 0) {
        size += 1 + pb::CodedOutputStream.ComputeUInt32Size(ItemCode);
      }
      if (ItemType != 0) {
        size += 1 + pb::CodedOutputStream.ComputeUInt32Size(ItemType);
      }
      if (Amount != 0) {
        size += 1 + pb::CodedOutputStream.ComputeUInt32Size(Amount);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(ItemData other) {
      if (other == null) {
        return;
      }
      if (other.ItemCode != 0) {
        ItemCode = other.ItemCode;
      }
      if (other.ItemType != 0) {
        ItemType = other.ItemType;
      }
      if (other.Amount != 0) {
        Amount = other.Amount;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 8: {
            ItemCode = input.ReadUInt32();
            break;
          }
          case 16: {
            ItemType = input.ReadUInt32();
            break;
          }
          case 24: {
            Amount = input.ReadUInt32();
            break;
          }
        }
      }
    }

  }

  /// <summary>
  /// 플레이어 정보
  /// </summary>
  public sealed partial class PlayerRoomInfo : pb::IMessage<PlayerRoomInfo> {
    private static readonly pb::MessageParser<PlayerRoomInfo> _parser = new pb::MessageParser<PlayerRoomInfo>(() => new PlayerRoomInfo());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<PlayerRoomInfo> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Protocol.ProtocolReflection.Descriptor.MessageTypes[12]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public PlayerRoomInfo() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public PlayerRoomInfo(PlayerRoomInfo other) : this() {
      playerId_ = other.playerId_;
      playerName_ = other.playerName_;
      avartarItem_ = other.avartarItem_;
      teamIndex_ = other.teamIndex_;
      ready_ = other.ready_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public PlayerRoomInfo Clone() {
      return new PlayerRoomInfo(this);
    }

    /// <summary>Field number for the "playerId" field.</summary>
    public const int PlayerIdFieldNumber = 1;
    private uint playerId_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public uint PlayerId {
      get { return playerId_; }
      set {
        playerId_ = value;
      }
    }

    /// <summary>Field number for the "playerName" field.</summary>
    public const int PlayerNameFieldNumber = 2;
    private string playerName_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string PlayerName {
      get { return playerName_; }
      set {
        playerName_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "avartarItem" field.</summary>
    public const int AvartarItemFieldNumber = 3;
    private uint avartarItem_;
    /// <summary>
    ///repeated?
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public uint AvartarItem {
      get { return avartarItem_; }
      set {
        avartarItem_ = value;
      }
    }

    /// <summary>Field number for the "teamIndex" field.</summary>
    public const int TeamIndexFieldNumber = 4;
    private uint teamIndex_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public uint TeamIndex {
      get { return teamIndex_; }
      set {
        teamIndex_ = value;
      }
    }

    /// <summary>Field number for the "ready" field.</summary>
    public const int ReadyFieldNumber = 5;
    private bool ready_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Ready {
      get { return ready_; }
      set {
        ready_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as PlayerRoomInfo);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(PlayerRoomInfo other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (PlayerId != other.PlayerId) return false;
      if (PlayerName != other.PlayerName) return false;
      if (AvartarItem != other.AvartarItem) return false;
      if (TeamIndex != other.TeamIndex) return false;
      if (Ready != other.Ready) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (PlayerId != 0) hash ^= PlayerId.GetHashCode();
      if (PlayerName.Length != 0) hash ^= PlayerName.GetHashCode();
      if (AvartarItem != 0) hash ^= AvartarItem.GetHashCode();
      if (TeamIndex != 0) hash ^= TeamIndex.GetHashCode();
      if (Ready != false) hash ^= Ready.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (PlayerId != 0) {
        output.WriteRawTag(8);
        output.WriteUInt32(PlayerId);
      }
      if (PlayerName.Length != 0) {
        output.WriteRawTag(18);
        output.WriteString(PlayerName);
      }
      if (AvartarItem != 0) {
        output.WriteRawTag(24);
        output.WriteUInt32(AvartarItem);
      }
      if (TeamIndex != 0) {
        output.WriteRawTag(32);
        output.WriteUInt32(TeamIndex);
      }
      if (Ready != false) {
        output.WriteRawTag(40);
        output.WriteBool(Ready);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (PlayerId != 0) {
        size += 1 + pb::CodedOutputStream.ComputeUInt32Size(PlayerId);
      }
      if (PlayerName.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(PlayerName);
      }
      if (AvartarItem != 0) {
        size += 1 + pb::CodedOutputStream.ComputeUInt32Size(AvartarItem);
      }
      if (TeamIndex != 0) {
        size += 1 + pb::CodedOutputStream.ComputeUInt32Size(TeamIndex);
      }
      if (Ready != false) {
        size += 1 + 1;
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(PlayerRoomInfo other) {
      if (other == null) {
        return;
      }
      if (other.PlayerId != 0) {
        PlayerId = other.PlayerId;
      }
      if (other.PlayerName.Length != 0) {
        PlayerName = other.PlayerName;
      }
      if (other.AvartarItem != 0) {
        AvartarItem = other.AvartarItem;
      }
      if (other.TeamIndex != 0) {
        TeamIndex = other.TeamIndex;
      }
      if (other.Ready != false) {
        Ready = other.Ready;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 8: {
            PlayerId = input.ReadUInt32();
            break;
          }
          case 18: {
            PlayerName = input.ReadString();
            break;
          }
          case 24: {
            AvartarItem = input.ReadUInt32();
            break;
          }
          case 32: {
            TeamIndex = input.ReadUInt32();
            break;
          }
          case 40: {
            Ready = input.ReadBool();
            break;
          }
        }
      }
    }

  }

  /// <summary>
  /// 플레이어 초기 정보
  /// </summary>
  public sealed partial class PlayerInitialData : pb::IMessage<PlayerInitialData> {
    private static readonly pb::MessageParser<PlayerInitialData> _parser = new pb::MessageParser<PlayerInitialData>(() => new PlayerInitialData());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<PlayerInitialData> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Protocol.ProtocolReflection.Descriptor.MessageTypes[13]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public PlayerInitialData() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public PlayerInitialData(PlayerInitialData other) : this() {
      playerId_ = other.playerId_;
      playerName_ = other.playerName_;
      avartarItem_ = other.avartarItem_;
      teamIndex_ = other.teamIndex_;
      position_ = other.position_ != null ? other.position_.Clone() : null;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public PlayerInitialData Clone() {
      return new PlayerInitialData(this);
    }

    /// <summary>Field number for the "playerId" field.</summary>
    public const int PlayerIdFieldNumber = 1;
    private uint playerId_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public uint PlayerId {
      get { return playerId_; }
      set {
        playerId_ = value;
      }
    }

    /// <summary>Field number for the "playerName" field.</summary>
    public const int PlayerNameFieldNumber = 2;
    private string playerName_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string PlayerName {
      get { return playerName_; }
      set {
        playerName_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "avartarItem" field.</summary>
    public const int AvartarItemFieldNumber = 3;
    private uint avartarItem_;
    /// <summary>
    ///repeated?
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public uint AvartarItem {
      get { return avartarItem_; }
      set {
        avartarItem_ = value;
      }
    }

    /// <summary>Field number for the "teamIndex" field.</summary>
    public const int TeamIndexFieldNumber = 4;
    private uint teamIndex_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public uint TeamIndex {
      get { return teamIndex_; }
      set {
        teamIndex_ = value;
      }
    }

    /// <summary>Field number for the "position" field.</summary>
    public const int PositionFieldNumber = 5;
    private global::Protocol.Position position_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::Protocol.Position Position {
      get { return position_; }
      set {
        position_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as PlayerInitialData);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(PlayerInitialData other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (PlayerId != other.PlayerId) return false;
      if (PlayerName != other.PlayerName) return false;
      if (AvartarItem != other.AvartarItem) return false;
      if (TeamIndex != other.TeamIndex) return false;
      if (!object.Equals(Position, other.Position)) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (PlayerId != 0) hash ^= PlayerId.GetHashCode();
      if (PlayerName.Length != 0) hash ^= PlayerName.GetHashCode();
      if (AvartarItem != 0) hash ^= AvartarItem.GetHashCode();
      if (TeamIndex != 0) hash ^= TeamIndex.GetHashCode();
      if (position_ != null) hash ^= Position.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (PlayerId != 0) {
        output.WriteRawTag(8);
        output.WriteUInt32(PlayerId);
      }
      if (PlayerName.Length != 0) {
        output.WriteRawTag(18);
        output.WriteString(PlayerName);
      }
      if (AvartarItem != 0) {
        output.WriteRawTag(24);
        output.WriteUInt32(AvartarItem);
      }
      if (TeamIndex != 0) {
        output.WriteRawTag(32);
        output.WriteUInt32(TeamIndex);
      }
      if (position_ != null) {
        output.WriteRawTag(42);
        output.WriteMessage(Position);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (PlayerId != 0) {
        size += 1 + pb::CodedOutputStream.ComputeUInt32Size(PlayerId);
      }
      if (PlayerName.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(PlayerName);
      }
      if (AvartarItem != 0) {
        size += 1 + pb::CodedOutputStream.ComputeUInt32Size(AvartarItem);
      }
      if (TeamIndex != 0) {
        size += 1 + pb::CodedOutputStream.ComputeUInt32Size(TeamIndex);
      }
      if (position_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(Position);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(PlayerInitialData other) {
      if (other == null) {
        return;
      }
      if (other.PlayerId != 0) {
        PlayerId = other.PlayerId;
      }
      if (other.PlayerName.Length != 0) {
        PlayerName = other.PlayerName;
      }
      if (other.AvartarItem != 0) {
        AvartarItem = other.AvartarItem;
      }
      if (other.TeamIndex != 0) {
        TeamIndex = other.TeamIndex;
      }
      if (other.position_ != null) {
        if (position_ == null) {
          Position = new global::Protocol.Position();
        }
        Position.MergeFrom(other.Position);
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 8: {
            PlayerId = input.ReadUInt32();
            break;
          }
          case 18: {
            PlayerName = input.ReadString();
            break;
          }
          case 24: {
            AvartarItem = input.ReadUInt32();
            break;
          }
          case 32: {
            TeamIndex = input.ReadUInt32();
            break;
          }
          case 42: {
            if (position_ == null) {
              Position = new global::Protocol.Position();
            }
            input.ReadMessage(Position);
            break;
          }
        }
      }
    }

  }

  /// <summary>
  /// 기타 필요한 메시지 정의
  /// </summary>
  public sealed partial class PlayerState : pb::IMessage<PlayerState> {
    private static readonly pb::MessageParser<PlayerState> _parser = new pb::MessageParser<PlayerState>(() => new PlayerState());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<PlayerState> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Protocol.ProtocolReflection.Descriptor.MessageTypes[14]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public PlayerState() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public PlayerState(PlayerState other) : this() {
      playerId_ = other.playerId_;
      actionType_ = other.actionType_;
      position_ = other.position_ != null ? other.position_.Clone() : null;
      equippedItem_ = other.equippedItem_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public PlayerState Clone() {
      return new PlayerState(this);
    }

    /// <summary>Field number for the "playerId" field.</summary>
    public const int PlayerIdFieldNumber = 1;
    private uint playerId_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public uint PlayerId {
      get { return playerId_; }
      set {
        playerId_ = value;
      }
    }

    /// <summary>Field number for the "actionType" field.</summary>
    public const int ActionTypeFieldNumber = 2;
    private uint actionType_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public uint ActionType {
      get { return actionType_; }
      set {
        actionType_ = value;
      }
    }

    /// <summary>Field number for the "position" field.</summary>
    public const int PositionFieldNumber = 3;
    private global::Protocol.Position position_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::Protocol.Position Position {
      get { return position_; }
      set {
        position_ = value;
      }
    }

    /// <summary>Field number for the "equippedItem" field.</summary>
    public const int EquippedItemFieldNumber = 4;
    private uint equippedItem_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public uint EquippedItem {
      get { return equippedItem_; }
      set {
        equippedItem_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as PlayerState);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(PlayerState other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (PlayerId != other.PlayerId) return false;
      if (ActionType != other.ActionType) return false;
      if (!object.Equals(Position, other.Position)) return false;
      if (EquippedItem != other.EquippedItem) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (PlayerId != 0) hash ^= PlayerId.GetHashCode();
      if (ActionType != 0) hash ^= ActionType.GetHashCode();
      if (position_ != null) hash ^= Position.GetHashCode();
      if (EquippedItem != 0) hash ^= EquippedItem.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (PlayerId != 0) {
        output.WriteRawTag(8);
        output.WriteUInt32(PlayerId);
      }
      if (ActionType != 0) {
        output.WriteRawTag(16);
        output.WriteUInt32(ActionType);
      }
      if (position_ != null) {
        output.WriteRawTag(26);
        output.WriteMessage(Position);
      }
      if (EquippedItem != 0) {
        output.WriteRawTag(32);
        output.WriteUInt32(EquippedItem);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (PlayerId != 0) {
        size += 1 + pb::CodedOutputStream.ComputeUInt32Size(PlayerId);
      }
      if (ActionType != 0) {
        size += 1 + pb::CodedOutputStream.ComputeUInt32Size(ActionType);
      }
      if (position_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(Position);
      }
      if (EquippedItem != 0) {
        size += 1 + pb::CodedOutputStream.ComputeUInt32Size(EquippedItem);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(PlayerState other) {
      if (other == null) {
        return;
      }
      if (other.PlayerId != 0) {
        PlayerId = other.PlayerId;
      }
      if (other.ActionType != 0) {
        ActionType = other.ActionType;
      }
      if (other.position_ != null) {
        if (position_ == null) {
          Position = new global::Protocol.Position();
        }
        Position.MergeFrom(other.Position);
      }
      if (other.EquippedItem != 0) {
        EquippedItem = other.EquippedItem;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 8: {
            PlayerId = input.ReadUInt32();
            break;
          }
          case 16: {
            ActionType = input.ReadUInt32();
            break;
          }
          case 26: {
            if (position_ == null) {
              Position = new global::Protocol.Position();
            }
            input.ReadMessage(Position);
            break;
          }
          case 32: {
            EquippedItem = input.ReadUInt32();
            break;
          }
        }
      }
    }

  }

  public sealed partial class FieldUnit : pb::IMessage<FieldUnit> {
    private static readonly pb::MessageParser<FieldUnit> _parser = new pb::MessageParser<FieldUnit>(() => new FieldUnit());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<FieldUnit> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Protocol.ProtocolReflection.Descriptor.MessageTypes[15]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public FieldUnit() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public FieldUnit(FieldUnit other) : this() {
      id_ = other.id_;
      state_ = other.state_;
      position_ = other.position_ != null ? other.position_.Clone() : null;
      hp_ = other.hp_;
      damage_ = other.damage_;
      targetId_ = other.targetId_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public FieldUnit Clone() {
      return new FieldUnit(this);
    }

    /// <summary>Field number for the "id" field.</summary>
    public const int IdFieldNumber = 1;
    private uint id_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public uint Id {
      get { return id_; }
      set {
        id_ = value;
      }
    }

    /// <summary>Field number for the "state" field.</summary>
    public const int StateFieldNumber = 2;
    private uint state_;
    /// <summary>
    /// 상태아이디로 이동인지, 근거리공격인지, 원거리공격인지 등등
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public uint State {
      get { return state_; }
      set {
        state_ = value;
      }
    }

    /// <summary>Field number for the "position" field.</summary>
    public const int PositionFieldNumber = 3;
    private global::Protocol.Position position_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::Protocol.Position Position {
      get { return position_; }
      set {
        position_ = value;
      }
    }

    /// <summary>Field number for the "hp" field.</summary>
    public const int HpFieldNumber = 4;
    private uint hp_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public uint Hp {
      get { return hp_; }
      set {
        hp_ = value;
      }
    }

    /// <summary>Field number for the "damage" field.</summary>
    public const int DamageFieldNumber = 5;
    private uint damage_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public uint Damage {
      get { return damage_; }
      set {
        damage_ = value;
      }
    }

    /// <summary>Field number for the "targetId" field.</summary>
    public const int TargetIdFieldNumber = 6;
    private uint targetId_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public uint TargetId {
      get { return targetId_; }
      set {
        targetId_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as FieldUnit);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(FieldUnit other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (Id != other.Id) return false;
      if (State != other.State) return false;
      if (!object.Equals(Position, other.Position)) return false;
      if (Hp != other.Hp) return false;
      if (Damage != other.Damage) return false;
      if (TargetId != other.TargetId) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (Id != 0) hash ^= Id.GetHashCode();
      if (State != 0) hash ^= State.GetHashCode();
      if (position_ != null) hash ^= Position.GetHashCode();
      if (Hp != 0) hash ^= Hp.GetHashCode();
      if (Damage != 0) hash ^= Damage.GetHashCode();
      if (TargetId != 0) hash ^= TargetId.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (Id != 0) {
        output.WriteRawTag(8);
        output.WriteUInt32(Id);
      }
      if (State != 0) {
        output.WriteRawTag(16);
        output.WriteUInt32(State);
      }
      if (position_ != null) {
        output.WriteRawTag(26);
        output.WriteMessage(Position);
      }
      if (Hp != 0) {
        output.WriteRawTag(32);
        output.WriteUInt32(Hp);
      }
      if (Damage != 0) {
        output.WriteRawTag(40);
        output.WriteUInt32(Damage);
      }
      if (TargetId != 0) {
        output.WriteRawTag(48);
        output.WriteUInt32(TargetId);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (Id != 0) {
        size += 1 + pb::CodedOutputStream.ComputeUInt32Size(Id);
      }
      if (State != 0) {
        size += 1 + pb::CodedOutputStream.ComputeUInt32Size(State);
      }
      if (position_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(Position);
      }
      if (Hp != 0) {
        size += 1 + pb::CodedOutputStream.ComputeUInt32Size(Hp);
      }
      if (Damage != 0) {
        size += 1 + pb::CodedOutputStream.ComputeUInt32Size(Damage);
      }
      if (TargetId != 0) {
        size += 1 + pb::CodedOutputStream.ComputeUInt32Size(TargetId);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(FieldUnit other) {
      if (other == null) {
        return;
      }
      if (other.Id != 0) {
        Id = other.Id;
      }
      if (other.State != 0) {
        State = other.State;
      }
      if (other.position_ != null) {
        if (position_ == null) {
          Position = new global::Protocol.Position();
        }
        Position.MergeFrom(other.Position);
      }
      if (other.Hp != 0) {
        Hp = other.Hp;
      }
      if (other.Damage != 0) {
        Damage = other.Damage;
      }
      if (other.TargetId != 0) {
        TargetId = other.TargetId;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 8: {
            Id = input.ReadUInt32();
            break;
          }
          case 16: {
            State = input.ReadUInt32();
            break;
          }
          case 26: {
            if (position_ == null) {
              Position = new global::Protocol.Position();
            }
            input.ReadMessage(Position);
            break;
          }
          case 32: {
            Hp = input.ReadUInt32();
            break;
          }
          case 40: {
            Damage = input.ReadUInt32();
            break;
          }
          case 48: {
            TargetId = input.ReadUInt32();
            break;
          }
        }
      }
    }

  }

  public sealed partial class Position : pb::IMessage<Position> {
    private static readonly pb::MessageParser<Position> _parser = new pb::MessageParser<Position>(() => new Position());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<Position> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Protocol.ProtocolReflection.Descriptor.MessageTypes[16]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public Position() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public Position(Position other) : this() {
      x_ = other.x_;
      y_ = other.y_;
      z_ = other.z_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public Position Clone() {
      return new Position(this);
    }

    /// <summary>Field number for the "x" field.</summary>
    public const int XFieldNumber = 1;
    private float x_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public float X {
      get { return x_; }
      set {
        x_ = value;
      }
    }

    /// <summary>Field number for the "y" field.</summary>
    public const int YFieldNumber = 2;
    private float y_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public float Y {
      get { return y_; }
      set {
        y_ = value;
      }
    }

    /// <summary>Field number for the "z" field.</summary>
    public const int ZFieldNumber = 3;
    private float z_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public float Z {
      get { return z_; }
      set {
        z_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as Position);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(Position other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (!pbc::ProtobufEqualityComparers.BitwiseSingleEqualityComparer.Equals(X, other.X)) return false;
      if (!pbc::ProtobufEqualityComparers.BitwiseSingleEqualityComparer.Equals(Y, other.Y)) return false;
      if (!pbc::ProtobufEqualityComparers.BitwiseSingleEqualityComparer.Equals(Z, other.Z)) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (X != 0F) hash ^= pbc::ProtobufEqualityComparers.BitwiseSingleEqualityComparer.GetHashCode(X);
      if (Y != 0F) hash ^= pbc::ProtobufEqualityComparers.BitwiseSingleEqualityComparer.GetHashCode(Y);
      if (Z != 0F) hash ^= pbc::ProtobufEqualityComparers.BitwiseSingleEqualityComparer.GetHashCode(Z);
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (X != 0F) {
        output.WriteRawTag(13);
        output.WriteFloat(X);
      }
      if (Y != 0F) {
        output.WriteRawTag(21);
        output.WriteFloat(Y);
      }
      if (Z != 0F) {
        output.WriteRawTag(29);
        output.WriteFloat(Z);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (X != 0F) {
        size += 1 + 4;
      }
      if (Y != 0F) {
        size += 1 + 4;
      }
      if (Z != 0F) {
        size += 1 + 4;
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(Position other) {
      if (other == null) {
        return;
      }
      if (other.X != 0F) {
        X = other.X;
      }
      if (other.Y != 0F) {
        Y = other.Y;
      }
      if (other.Z != 0F) {
        Z = other.Z;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 13: {
            X = input.ReadFloat();
            break;
          }
          case 21: {
            Y = input.ReadFloat();
            break;
          }
          case 29: {
            Z = input.ReadFloat();
            break;
          }
        }
      }
    }

  }

  public sealed partial class C2SAuthorizeReq : pb::IMessage<C2SAuthorizeReq> {
    private static readonly pb::MessageParser<C2SAuthorizeReq> _parser = new pb::MessageParser<C2SAuthorizeReq>(() => new C2SAuthorizeReq());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<C2SAuthorizeReq> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Protocol.ProtocolReflection.Descriptor.MessageTypes[17]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public C2SAuthorizeReq() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public C2SAuthorizeReq(C2SAuthorizeReq other) : this() {
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public C2SAuthorizeReq Clone() {
      return new C2SAuthorizeReq(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as C2SAuthorizeReq);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(C2SAuthorizeReq other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(C2SAuthorizeReq other) {
      if (other == null) {
        return;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
        }
      }
    }

  }

  public sealed partial class S2CAuthorizeRes : pb::IMessage<S2CAuthorizeRes> {
    private static readonly pb::MessageParser<S2CAuthorizeRes> _parser = new pb::MessageParser<S2CAuthorizeRes>(() => new S2CAuthorizeRes());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<S2CAuthorizeRes> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Protocol.ProtocolReflection.Descriptor.MessageTypes[18]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public S2CAuthorizeRes() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public S2CAuthorizeRes(S2CAuthorizeRes other) : this() {
      authorizeResultCode_ = other.authorizeResultCode_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public S2CAuthorizeRes Clone() {
      return new S2CAuthorizeRes(this);
    }

    /// <summary>Field number for the "AuthorizeResultCode" field.</summary>
    public const int AuthorizeResultCodeFieldNumber = 1;
    private uint authorizeResultCode_;
    /// <summary>
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public uint AuthorizeResultCode {
      get { return authorizeResultCode_; }
      set {
        authorizeResultCode_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as S2CAuthorizeRes);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(S2CAuthorizeRes other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (AuthorizeResultCode != other.AuthorizeResultCode) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (AuthorizeResultCode != 0) hash ^= AuthorizeResultCode.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (AuthorizeResultCode != 0) {
        output.WriteRawTag(8);
        output.WriteUInt32(AuthorizeResultCode);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (AuthorizeResultCode != 0) {
        size += 1 + pb::CodedOutputStream.ComputeUInt32Size(AuthorizeResultCode);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(S2CAuthorizeRes other) {
      if (other == null) {
        return;
      }
      if (other.AuthorizeResultCode != 0) {
        AuthorizeResultCode = other.AuthorizeResultCode;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 8: {
            AuthorizeResultCode = input.ReadUInt32();
            break;
          }
        }
      }
    }

  }

  /// <summary>
  /// 초기 정보 동기화
  /// </summary>
  public sealed partial class S2CInitialNoti : pb::IMessage<S2CInitialNoti> {
    private static readonly pb::MessageParser<S2CInitialNoti> _parser = new pb::MessageParser<S2CInitialNoti>(() => new S2CInitialNoti());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<S2CInitialNoti> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Protocol.ProtocolReflection.Descriptor.MessageTypes[19]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public S2CInitialNoti() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public S2CInitialNoti(S2CInitialNoti other) : this() {
      playerInitialData_ = other.playerInitialData_.Clone();
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public S2CInitialNoti Clone() {
      return new S2CInitialNoti(this);
    }

    /// <summary>Field number for the "playerInitialData" field.</summary>
    public const int PlayerInitialDataFieldNumber = 1;
    private static readonly pb::FieldCodec<global::Protocol.PlayerInitialData> _repeated_playerInitialData_codec
        = pb::FieldCodec.ForMessage(10, global::Protocol.PlayerInitialData.Parser);
    private readonly pbc::RepeatedField<global::Protocol.PlayerInitialData> playerInitialData_ = new pbc::RepeatedField<global::Protocol.PlayerInitialData>();
    /// <summary>
    /// 플레이어 초기 정보
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public pbc::RepeatedField<global::Protocol.PlayerInitialData> PlayerInitialData {
      get { return playerInitialData_; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as S2CInitialNoti);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(S2CInitialNoti other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if(!playerInitialData_.Equals(other.playerInitialData_)) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      hash ^= playerInitialData_.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      playerInitialData_.WriteTo(output, _repeated_playerInitialData_codec);
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      size += playerInitialData_.CalculateSize(_repeated_playerInitialData_codec);
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(S2CInitialNoti other) {
      if (other == null) {
        return;
      }
      playerInitialData_.Add(other.playerInitialData_);
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            playerInitialData_.AddEntriesFrom(input, _repeated_playerInitialData_codec);
            break;
          }
        }
      }
    }

  }

  /// <summary>
  /// 플레이어 상태 동기화
  /// </summary>
  public sealed partial class S2CSyncPlayersNoti : pb::IMessage<S2CSyncPlayersNoti> {
    private static readonly pb::MessageParser<S2CSyncPlayersNoti> _parser = new pb::MessageParser<S2CSyncPlayersNoti>(() => new S2CSyncPlayersNoti());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<S2CSyncPlayersNoti> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Protocol.ProtocolReflection.Descriptor.MessageTypes[20]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public S2CSyncPlayersNoti() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public S2CSyncPlayersNoti(S2CSyncPlayersNoti other) : this() {
      playerStates_ = other.playerStates_.Clone();
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public S2CSyncPlayersNoti Clone() {
      return new S2CSyncPlayersNoti(this);
    }

    /// <summary>Field number for the "playerStates" field.</summary>
    public const int PlayerStatesFieldNumber = 1;
    private static readonly pb::FieldCodec<global::Protocol.PlayerState> _repeated_playerStates_codec
        = pb::FieldCodec.ForMessage(10, global::Protocol.PlayerState.Parser);
    private readonly pbc::RepeatedField<global::Protocol.PlayerState> playerStates_ = new pbc::RepeatedField<global::Protocol.PlayerState>();
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public pbc::RepeatedField<global::Protocol.PlayerState> PlayerStates {
      get { return playerStates_; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as S2CSyncPlayersNoti);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(S2CSyncPlayersNoti other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if(!playerStates_.Equals(other.playerStates_)) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      hash ^= playerStates_.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      playerStates_.WriteTo(output, _repeated_playerStates_codec);
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      size += playerStates_.CalculateSize(_repeated_playerStates_codec);
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(S2CSyncPlayersNoti other) {
      if (other == null) {
        return;
      }
      playerStates_.Add(other.playerStates_);
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            playerStates_.AddEntriesFrom(input, _repeated_playerStates_codec);
            break;
          }
        }
      }
    }

  }

  public sealed partial class C2SPlayerMove : pb::IMessage<C2SPlayerMove> {
    private static readonly pb::MessageParser<C2SPlayerMove> _parser = new pb::MessageParser<C2SPlayerMove>(() => new C2SPlayerMove());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<C2SPlayerMove> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Protocol.ProtocolReflection.Descriptor.MessageTypes[21]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public C2SPlayerMove() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public C2SPlayerMove(C2SPlayerMove other) : this() {
      position_ = other.position_ != null ? other.position_.Clone() : null;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public C2SPlayerMove Clone() {
      return new C2SPlayerMove(this);
    }

    /// <summary>Field number for the "position" field.</summary>
    public const int PositionFieldNumber = 1;
    private global::Protocol.Position position_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::Protocol.Position Position {
      get { return position_; }
      set {
        position_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as C2SPlayerMove);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(C2SPlayerMove other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (!object.Equals(Position, other.Position)) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (position_ != null) hash ^= Position.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (position_ != null) {
        output.WriteRawTag(10);
        output.WriteMessage(Position);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (position_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(Position);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(C2SPlayerMove other) {
      if (other == null) {
        return;
      }
      if (other.position_ != null) {
        if (position_ == null) {
          Position = new global::Protocol.Position();
        }
        Position.MergeFrom(other.Position);
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            if (position_ == null) {
              Position = new global::Protocol.Position();
            }
            input.ReadMessage(Position);
            break;
          }
        }
      }
    }

  }

  /// <summary>
  /// 용광로 상태 동기화
  /// </summary>
  public sealed partial class S2CSyncFurnaceStateNoti : pb::IMessage<S2CSyncFurnaceStateNoti> {
    private static readonly pb::MessageParser<S2CSyncFurnaceStateNoti> _parser = new pb::MessageParser<S2CSyncFurnaceStateNoti>(() => new S2CSyncFurnaceStateNoti());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<S2CSyncFurnaceStateNoti> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Protocol.ProtocolReflection.Descriptor.MessageTypes[22]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public S2CSyncFurnaceStateNoti() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public S2CSyncFurnaceStateNoti(S2CSyncFurnaceStateNoti other) : this() {
      teamIndex_ = other.teamIndex_;
      furnaceStateCode_ = other.furnaceStateCode_;
      progress_ = other.progress_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public S2CSyncFurnaceStateNoti Clone() {
      return new S2CSyncFurnaceStateNoti(this);
    }

    /// <summary>Field number for the "teamIndex" field.</summary>
    public const int TeamIndexFieldNumber = 1;
    private uint teamIndex_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public uint TeamIndex {
      get { return teamIndex_; }
      set {
        teamIndex_ = value;
      }
    }

    /// <summary>Field number for the "furnaceStateCode" field.</summary>
    public const int FurnaceStateCodeFieldNumber = 2;
    private uint furnaceStateCode_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public uint FurnaceStateCode {
      get { return furnaceStateCode_; }
      set {
        furnaceStateCode_ = value;
      }
    }

    /// <summary>Field number for the "progress" field.</summary>
    public const int ProgressFieldNumber = 3;
    private float progress_;
    /// <summary>
    /// 백분율
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public float Progress {
      get { return progress_; }
      set {
        progress_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as S2CSyncFurnaceStateNoti);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(S2CSyncFurnaceStateNoti other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (TeamIndex != other.TeamIndex) return false;
      if (FurnaceStateCode != other.FurnaceStateCode) return false;
      if (!pbc::ProtobufEqualityComparers.BitwiseSingleEqualityComparer.Equals(Progress, other.Progress)) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (TeamIndex != 0) hash ^= TeamIndex.GetHashCode();
      if (FurnaceStateCode != 0) hash ^= FurnaceStateCode.GetHashCode();
      if (Progress != 0F) hash ^= pbc::ProtobufEqualityComparers.BitwiseSingleEqualityComparer.GetHashCode(Progress);
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (TeamIndex != 0) {
        output.WriteRawTag(8);
        output.WriteUInt32(TeamIndex);
      }
      if (FurnaceStateCode != 0) {
        output.WriteRawTag(16);
        output.WriteUInt32(FurnaceStateCode);
      }
      if (Progress != 0F) {
        output.WriteRawTag(29);
        output.WriteFloat(Progress);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (TeamIndex != 0) {
        size += 1 + pb::CodedOutputStream.ComputeUInt32Size(TeamIndex);
      }
      if (FurnaceStateCode != 0) {
        size += 1 + pb::CodedOutputStream.ComputeUInt32Size(FurnaceStateCode);
      }
      if (Progress != 0F) {
        size += 1 + 4;
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(S2CSyncFurnaceStateNoti other) {
      if (other == null) {
        return;
      }
      if (other.TeamIndex != 0) {
        TeamIndex = other.TeamIndex;
      }
      if (other.FurnaceStateCode != 0) {
        FurnaceStateCode = other.FurnaceStateCode;
      }
      if (other.Progress != 0F) {
        Progress = other.Progress;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 8: {
            TeamIndex = input.ReadUInt32();
            break;
          }
          case 16: {
            FurnaceStateCode = input.ReadUInt32();
            break;
          }
          case 29: {
            Progress = input.ReadFloat();
            break;
          }
        }
      }
    }

  }

  /// <summary>
  /// 제제소 상태 동기화
  /// </summary>
  public sealed partial class S2CSawmillStatusNoti : pb::IMessage<S2CSawmillStatusNoti> {
    private static readonly pb::MessageParser<S2CSawmillStatusNoti> _parser = new pb::MessageParser<S2CSawmillStatusNoti>(() => new S2CSawmillStatusNoti());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<S2CSawmillStatusNoti> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Protocol.ProtocolReflection.Descriptor.MessageTypes[23]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public S2CSawmillStatusNoti() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public S2CSawmillStatusNoti(S2CSawmillStatusNoti other) : this() {
      teamIndex_ = other.teamIndex_;
      sawmillStateCode_ = other.sawmillStateCode_;
      progress_ = other.progress_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public S2CSawmillStatusNoti Clone() {
      return new S2CSawmillStatusNoti(this);
    }

    /// <summary>Field number for the "teamIndex" field.</summary>
    public const int TeamIndexFieldNumber = 1;
    private uint teamIndex_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public uint TeamIndex {
      get { return teamIndex_; }
      set {
        teamIndex_ = value;
      }
    }

    /// <summary>Field number for the "sawmillStateCode" field.</summary>
    public const int SawmillStateCodeFieldNumber = 2;
    private uint sawmillStateCode_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public uint SawmillStateCode {
      get { return sawmillStateCode_; }
      set {
        sawmillStateCode_ = value;
      }
    }

    /// <summary>Field number for the "progress" field.</summary>
    public const int ProgressFieldNumber = 3;
    private float progress_;
    /// <summary>
    /// 백분율
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public float Progress {
      get { return progress_; }
      set {
        progress_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as S2CSawmillStatusNoti);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(S2CSawmillStatusNoti other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (TeamIndex != other.TeamIndex) return false;
      if (SawmillStateCode != other.SawmillStateCode) return false;
      if (!pbc::ProtobufEqualityComparers.BitwiseSingleEqualityComparer.Equals(Progress, other.Progress)) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (TeamIndex != 0) hash ^= TeamIndex.GetHashCode();
      if (SawmillStateCode != 0) hash ^= SawmillStateCode.GetHashCode();
      if (Progress != 0F) hash ^= pbc::ProtobufEqualityComparers.BitwiseSingleEqualityComparer.GetHashCode(Progress);
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (TeamIndex != 0) {
        output.WriteRawTag(8);
        output.WriteUInt32(TeamIndex);
      }
      if (SawmillStateCode != 0) {
        output.WriteRawTag(16);
        output.WriteUInt32(SawmillStateCode);
      }
      if (Progress != 0F) {
        output.WriteRawTag(29);
        output.WriteFloat(Progress);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (TeamIndex != 0) {
        size += 1 + pb::CodedOutputStream.ComputeUInt32Size(TeamIndex);
      }
      if (SawmillStateCode != 0) {
        size += 1 + pb::CodedOutputStream.ComputeUInt32Size(SawmillStateCode);
      }
      if (Progress != 0F) {
        size += 1 + 4;
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(S2CSawmillStatusNoti other) {
      if (other == null) {
        return;
      }
      if (other.TeamIndex != 0) {
        TeamIndex = other.TeamIndex;
      }
      if (other.SawmillStateCode != 0) {
        SawmillStateCode = other.SawmillStateCode;
      }
      if (other.Progress != 0F) {
        Progress = other.Progress;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 8: {
            TeamIndex = input.ReadUInt32();
            break;
          }
          case 16: {
            SawmillStateCode = input.ReadUInt32();
            break;
          }
          case 29: {
            Progress = input.ReadFloat();
            break;
          }
        }
      }
    }

  }

  /// <summary>
  /// 제작소 상태 동기화
  /// </summary>
  public sealed partial class S2CWorkbenchStatusNoti : pb::IMessage<S2CWorkbenchStatusNoti> {
    private static readonly pb::MessageParser<S2CWorkbenchStatusNoti> _parser = new pb::MessageParser<S2CWorkbenchStatusNoti>(() => new S2CWorkbenchStatusNoti());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<S2CWorkbenchStatusNoti> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Protocol.ProtocolReflection.Descriptor.MessageTypes[24]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public S2CWorkbenchStatusNoti() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public S2CWorkbenchStatusNoti(S2CWorkbenchStatusNoti other) : this() {
      teamIndex_ = other.teamIndex_;
      workbenchStateCode_ = other.workbenchStateCode_;
      progress_ = other.progress_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public S2CWorkbenchStatusNoti Clone() {
      return new S2CWorkbenchStatusNoti(this);
    }

    /// <summary>Field number for the "teamIndex" field.</summary>
    public const int TeamIndexFieldNumber = 1;
    private uint teamIndex_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public uint TeamIndex {
      get { return teamIndex_; }
      set {
        teamIndex_ = value;
      }
    }

    /// <summary>Field number for the "workbenchStateCode" field.</summary>
    public const int WorkbenchStateCodeFieldNumber = 2;
    private uint workbenchStateCode_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public uint WorkbenchStateCode {
      get { return workbenchStateCode_; }
      set {
        workbenchStateCode_ = value;
      }
    }

    /// <summary>Field number for the "progress" field.</summary>
    public const int ProgressFieldNumber = 3;
    private float progress_;
    /// <summary>
    /// 백분율
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public float Progress {
      get { return progress_; }
      set {
        progress_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as S2CWorkbenchStatusNoti);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(S2CWorkbenchStatusNoti other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (TeamIndex != other.TeamIndex) return false;
      if (WorkbenchStateCode != other.WorkbenchStateCode) return false;
      if (!pbc::ProtobufEqualityComparers.BitwiseSingleEqualityComparer.Equals(Progress, other.Progress)) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (TeamIndex != 0) hash ^= TeamIndex.GetHashCode();
      if (WorkbenchStateCode != 0) hash ^= WorkbenchStateCode.GetHashCode();
      if (Progress != 0F) hash ^= pbc::ProtobufEqualityComparers.BitwiseSingleEqualityComparer.GetHashCode(Progress);
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (TeamIndex != 0) {
        output.WriteRawTag(8);
        output.WriteUInt32(TeamIndex);
      }
      if (WorkbenchStateCode != 0) {
        output.WriteRawTag(16);
        output.WriteUInt32(WorkbenchStateCode);
      }
      if (Progress != 0F) {
        output.WriteRawTag(29);
        output.WriteFloat(Progress);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (TeamIndex != 0) {
        size += 1 + pb::CodedOutputStream.ComputeUInt32Size(TeamIndex);
      }
      if (WorkbenchStateCode != 0) {
        size += 1 + pb::CodedOutputStream.ComputeUInt32Size(WorkbenchStateCode);
      }
      if (Progress != 0F) {
        size += 1 + 4;
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(S2CWorkbenchStatusNoti other) {
      if (other == null) {
        return;
      }
      if (other.TeamIndex != 0) {
        TeamIndex = other.TeamIndex;
      }
      if (other.WorkbenchStateCode != 0) {
        WorkbenchStateCode = other.WorkbenchStateCode;
      }
      if (other.Progress != 0F) {
        Progress = other.Progress;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 8: {
            TeamIndex = input.ReadUInt32();
            break;
          }
          case 16: {
            WorkbenchStateCode = input.ReadUInt32();
            break;
          }
          case 29: {
            Progress = input.ReadFloat();
            break;
          }
        }
      }
    }

  }

  /// <summary>
  /// 플레이어 액션 요청
  /// </summary>
  public sealed partial class C2SPlayerActionReq : pb::IMessage<C2SPlayerActionReq> {
    private static readonly pb::MessageParser<C2SPlayerActionReq> _parser = new pb::MessageParser<C2SPlayerActionReq>(() => new C2SPlayerActionReq());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<C2SPlayerActionReq> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Protocol.ProtocolReflection.Descriptor.MessageTypes[25]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public C2SPlayerActionReq() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public C2SPlayerActionReq(C2SPlayerActionReq other) : this() {
      actionType_ = other.actionType_;
      targetObjectId_ = other.targetObjectId_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public C2SPlayerActionReq Clone() {
      return new C2SPlayerActionReq(this);
    }

    /// <summary>Field number for the "actionType" field.</summary>
    public const int ActionTypeFieldNumber = 1;
    private uint actionType_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public uint ActionType {
      get { return actionType_; }
      set {
        actionType_ = value;
      }
    }

    /// <summary>Field number for the "targetObjectId" field.</summary>
    public const int TargetObjectIdFieldNumber = 2;
    private uint targetObjectId_;
    /// <summary>
    /// 행동 대상
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public uint TargetObjectId {
      get { return targetObjectId_; }
      set {
        targetObjectId_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as C2SPlayerActionReq);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(C2SPlayerActionReq other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (ActionType != other.ActionType) return false;
      if (TargetObjectId != other.TargetObjectId) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (ActionType != 0) hash ^= ActionType.GetHashCode();
      if (TargetObjectId != 0) hash ^= TargetObjectId.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (ActionType != 0) {
        output.WriteRawTag(8);
        output.WriteUInt32(ActionType);
      }
      if (TargetObjectId != 0) {
        output.WriteRawTag(16);
        output.WriteUInt32(TargetObjectId);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (ActionType != 0) {
        size += 1 + pb::CodedOutputStream.ComputeUInt32Size(ActionType);
      }
      if (TargetObjectId != 0) {
        size += 1 + pb::CodedOutputStream.ComputeUInt32Size(TargetObjectId);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(C2SPlayerActionReq other) {
      if (other == null) {
        return;
      }
      if (other.ActionType != 0) {
        ActionType = other.ActionType;
      }
      if (other.TargetObjectId != 0) {
        TargetObjectId = other.TargetObjectId;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 8: {
            ActionType = input.ReadUInt32();
            break;
          }
          case 16: {
            TargetObjectId = input.ReadUInt32();
            break;
          }
        }
      }
    }

  }

  /// <summary>
  /// 플레이어 액션 결과
  /// </summary>
  public sealed partial class S2CPlayerActionRes : pb::IMessage<S2CPlayerActionRes> {
    private static readonly pb::MessageParser<S2CPlayerActionRes> _parser = new pb::MessageParser<S2CPlayerActionRes>(() => new S2CPlayerActionRes());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<S2CPlayerActionRes> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Protocol.ProtocolReflection.Descriptor.MessageTypes[26]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public S2CPlayerActionRes() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public S2CPlayerActionRes(S2CPlayerActionRes other) : this() {
      actionType_ = other.actionType_;
      targetObjectId_ = other.targetObjectId_;
      success_ = other.success_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public S2CPlayerActionRes Clone() {
      return new S2CPlayerActionRes(this);
    }

    /// <summary>Field number for the "actionType" field.</summary>
    public const int ActionTypeFieldNumber = 1;
    private uint actionType_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public uint ActionType {
      get { return actionType_; }
      set {
        actionType_ = value;
      }
    }

    /// <summary>Field number for the "targetObjectId" field.</summary>
    public const int TargetObjectIdFieldNumber = 2;
    private uint targetObjectId_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public uint TargetObjectId {
      get { return targetObjectId_; }
      set {
        targetObjectId_ = value;
      }
    }

    /// <summary>Field number for the "success" field.</summary>
    public const int SuccessFieldNumber = 3;
    private bool success_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Success {
      get { return success_; }
      set {
        success_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as S2CPlayerActionRes);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(S2CPlayerActionRes other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (ActionType != other.ActionType) return false;
      if (TargetObjectId != other.TargetObjectId) return false;
      if (Success != other.Success) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (ActionType != 0) hash ^= ActionType.GetHashCode();
      if (TargetObjectId != 0) hash ^= TargetObjectId.GetHashCode();
      if (Success != false) hash ^= Success.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (ActionType != 0) {
        output.WriteRawTag(8);
        output.WriteUInt32(ActionType);
      }
      if (TargetObjectId != 0) {
        output.WriteRawTag(16);
        output.WriteUInt32(TargetObjectId);
      }
      if (Success != false) {
        output.WriteRawTag(24);
        output.WriteBool(Success);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (ActionType != 0) {
        size += 1 + pb::CodedOutputStream.ComputeUInt32Size(ActionType);
      }
      if (TargetObjectId != 0) {
        size += 1 + pb::CodedOutputStream.ComputeUInt32Size(TargetObjectId);
      }
      if (Success != false) {
        size += 1 + 1;
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(S2CPlayerActionRes other) {
      if (other == null) {
        return;
      }
      if (other.ActionType != 0) {
        ActionType = other.ActionType;
      }
      if (other.TargetObjectId != 0) {
        TargetObjectId = other.TargetObjectId;
      }
      if (other.Success != false) {
        Success = other.Success;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 8: {
            ActionType = input.ReadUInt32();
            break;
          }
          case 16: {
            TargetObjectId = input.ReadUInt32();
            break;
          }
          case 24: {
            Success = input.ReadBool();
            break;
          }
        }
      }
    }

  }

  /// <summary>
  /// 객체 스폰 알림 
  /// </summary>
  public sealed partial class S2CSpawnObjectNoti : pb::IMessage<S2CSpawnObjectNoti> {
    private static readonly pb::MessageParser<S2CSpawnObjectNoti> _parser = new pb::MessageParser<S2CSpawnObjectNoti>(() => new S2CSpawnObjectNoti());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<S2CSpawnObjectNoti> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Protocol.ProtocolReflection.Descriptor.MessageTypes[27]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public S2CSpawnObjectNoti() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public S2CSpawnObjectNoti(S2CSpawnObjectNoti other) : this() {
      objectId_ = other.objectId_;
      objectType_ = other.objectType_;
      areaType_ = other.areaType_;
      position_ = other.position_ != null ? other.position_.Clone() : null;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public S2CSpawnObjectNoti Clone() {
      return new S2CSpawnObjectNoti(this);
    }

    /// <summary>Field number for the "objectId" field.</summary>
    public const int ObjectIdFieldNumber = 1;
    private uint objectId_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public uint ObjectId {
      get { return objectId_; }
      set {
        objectId_ = value;
      }
    }

    /// <summary>Field number for the "objectType" field.</summary>
    public const int ObjectTypeFieldNumber = 2;
    private uint objectType_;
    /// <summary>
    /// 구조물, 유닛
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public uint ObjectType {
      get { return objectType_; }
      set {
        objectType_ = value;
      }
    }

    /// <summary>Field number for the "areaType" field.</summary>
    public const int AreaTypeFieldNumber = 3;
    private uint areaType_;
    /// <summary>
    /// 전장, 채굴장, 벌목장, 사냥터
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public uint AreaType {
      get { return areaType_; }
      set {
        areaType_ = value;
      }
    }

    /// <summary>Field number for the "position" field.</summary>
    public const int PositionFieldNumber = 4;
    private global::Protocol.Position position_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::Protocol.Position Position {
      get { return position_; }
      set {
        position_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as S2CSpawnObjectNoti);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(S2CSpawnObjectNoti other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (ObjectId != other.ObjectId) return false;
      if (ObjectType != other.ObjectType) return false;
      if (AreaType != other.AreaType) return false;
      if (!object.Equals(Position, other.Position)) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (ObjectId != 0) hash ^= ObjectId.GetHashCode();
      if (ObjectType != 0) hash ^= ObjectType.GetHashCode();
      if (AreaType != 0) hash ^= AreaType.GetHashCode();
      if (position_ != null) hash ^= Position.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (ObjectId != 0) {
        output.WriteRawTag(8);
        output.WriteUInt32(ObjectId);
      }
      if (ObjectType != 0) {
        output.WriteRawTag(16);
        output.WriteUInt32(ObjectType);
      }
      if (AreaType != 0) {
        output.WriteRawTag(24);
        output.WriteUInt32(AreaType);
      }
      if (position_ != null) {
        output.WriteRawTag(34);
        output.WriteMessage(Position);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (ObjectId != 0) {
        size += 1 + pb::CodedOutputStream.ComputeUInt32Size(ObjectId);
      }
      if (ObjectType != 0) {
        size += 1 + pb::CodedOutputStream.ComputeUInt32Size(ObjectType);
      }
      if (AreaType != 0) {
        size += 1 + pb::CodedOutputStream.ComputeUInt32Size(AreaType);
      }
      if (position_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(Position);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(S2CSpawnObjectNoti other) {
      if (other == null) {
        return;
      }
      if (other.ObjectId != 0) {
        ObjectId = other.ObjectId;
      }
      if (other.ObjectType != 0) {
        ObjectType = other.ObjectType;
      }
      if (other.AreaType != 0) {
        AreaType = other.AreaType;
      }
      if (other.position_ != null) {
        if (position_ == null) {
          Position = new global::Protocol.Position();
        }
        Position.MergeFrom(other.Position);
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 8: {
            ObjectId = input.ReadUInt32();
            break;
          }
          case 16: {
            ObjectType = input.ReadUInt32();
            break;
          }
          case 24: {
            AreaType = input.ReadUInt32();
            break;
          }
          case 34: {
            if (position_ == null) {
              Position = new global::Protocol.Position();
            }
            input.ReadMessage(Position);
            break;
          }
        }
      }
    }

  }

  /// <summary>
  /// 객체 파괴 알림
  /// </summary>
  public sealed partial class C2SDestoryObjectReq : pb::IMessage<C2SDestoryObjectReq> {
    private static readonly pb::MessageParser<C2SDestoryObjectReq> _parser = new pb::MessageParser<C2SDestoryObjectReq>(() => new C2SDestoryObjectReq());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<C2SDestoryObjectReq> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Protocol.ProtocolReflection.Descriptor.MessageTypes[28]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public C2SDestoryObjectReq() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public C2SDestoryObjectReq(C2SDestoryObjectReq other) : this() {
      objectId_ = other.objectId_;
      objectType_ = other.objectType_;
      areaType_ = other.areaType_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public C2SDestoryObjectReq Clone() {
      return new C2SDestoryObjectReq(this);
    }

    /// <summary>Field number for the "objectId" field.</summary>
    public const int ObjectIdFieldNumber = 1;
    private uint objectId_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public uint ObjectId {
      get { return objectId_; }
      set {
        objectId_ = value;
      }
    }

    /// <summary>Field number for the "objectType" field.</summary>
    public const int ObjectTypeFieldNumber = 2;
    private uint objectType_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public uint ObjectType {
      get { return objectType_; }
      set {
        objectType_ = value;
      }
    }

    /// <summary>Field number for the "areaType" field.</summary>
    public const int AreaTypeFieldNumber = 3;
    private uint areaType_;
    /// <summary>
    /// 전장, 채굴장, 벌목장, 사냥터 (검증 용)
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public uint AreaType {
      get { return areaType_; }
      set {
        areaType_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as C2SDestoryObjectReq);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(C2SDestoryObjectReq other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (ObjectId != other.ObjectId) return false;
      if (ObjectType != other.ObjectType) return false;
      if (AreaType != other.AreaType) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (ObjectId != 0) hash ^= ObjectId.GetHashCode();
      if (ObjectType != 0) hash ^= ObjectType.GetHashCode();
      if (AreaType != 0) hash ^= AreaType.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (ObjectId != 0) {
        output.WriteRawTag(8);
        output.WriteUInt32(ObjectId);
      }
      if (ObjectType != 0) {
        output.WriteRawTag(16);
        output.WriteUInt32(ObjectType);
      }
      if (AreaType != 0) {
        output.WriteRawTag(24);
        output.WriteUInt32(AreaType);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (ObjectId != 0) {
        size += 1 + pb::CodedOutputStream.ComputeUInt32Size(ObjectId);
      }
      if (ObjectType != 0) {
        size += 1 + pb::CodedOutputStream.ComputeUInt32Size(ObjectType);
      }
      if (AreaType != 0) {
        size += 1 + pb::CodedOutputStream.ComputeUInt32Size(AreaType);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(C2SDestoryObjectReq other) {
      if (other == null) {
        return;
      }
      if (other.ObjectId != 0) {
        ObjectId = other.ObjectId;
      }
      if (other.ObjectType != 0) {
        ObjectType = other.ObjectType;
      }
      if (other.AreaType != 0) {
        AreaType = other.AreaType;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 8: {
            ObjectId = input.ReadUInt32();
            break;
          }
          case 16: {
            ObjectType = input.ReadUInt32();
            break;
          }
          case 24: {
            AreaType = input.ReadUInt32();
            break;
          }
        }
      }
    }

  }

  public sealed partial class S2CDestoryObjectNoti : pb::IMessage<S2CDestoryObjectNoti> {
    private static readonly pb::MessageParser<S2CDestoryObjectNoti> _parser = new pb::MessageParser<S2CDestoryObjectNoti>(() => new S2CDestoryObjectNoti());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<S2CDestoryObjectNoti> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Protocol.ProtocolReflection.Descriptor.MessageTypes[29]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public S2CDestoryObjectNoti() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public S2CDestoryObjectNoti(S2CDestoryObjectNoti other) : this() {
      objectId_ = other.objectId_;
      objectType_ = other.objectType_;
      areaType_ = other.areaType_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public S2CDestoryObjectNoti Clone() {
      return new S2CDestoryObjectNoti(this);
    }

    /// <summary>Field number for the "objectId" field.</summary>
    public const int ObjectIdFieldNumber = 1;
    private uint objectId_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public uint ObjectId {
      get { return objectId_; }
      set {
        objectId_ = value;
      }
    }

    /// <summary>Field number for the "objectType" field.</summary>
    public const int ObjectTypeFieldNumber = 2;
    private uint objectType_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public uint ObjectType {
      get { return objectType_; }
      set {
        objectType_ = value;
      }
    }

    /// <summary>Field number for the "areaType" field.</summary>
    public const int AreaTypeFieldNumber = 3;
    private uint areaType_;
    /// <summary>
    /// 전장, 채굴장, 벌목장, 사냥터 (검증 용)
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public uint AreaType {
      get { return areaType_; }
      set {
        areaType_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as S2CDestoryObjectNoti);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(S2CDestoryObjectNoti other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (ObjectId != other.ObjectId) return false;
      if (ObjectType != other.ObjectType) return false;
      if (AreaType != other.AreaType) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (ObjectId != 0) hash ^= ObjectId.GetHashCode();
      if (ObjectType != 0) hash ^= ObjectType.GetHashCode();
      if (AreaType != 0) hash ^= AreaType.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (ObjectId != 0) {
        output.WriteRawTag(8);
        output.WriteUInt32(ObjectId);
      }
      if (ObjectType != 0) {
        output.WriteRawTag(16);
        output.WriteUInt32(ObjectType);
      }
      if (AreaType != 0) {
        output.WriteRawTag(24);
        output.WriteUInt32(AreaType);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (ObjectId != 0) {
        size += 1 + pb::CodedOutputStream.ComputeUInt32Size(ObjectId);
      }
      if (ObjectType != 0) {
        size += 1 + pb::CodedOutputStream.ComputeUInt32Size(ObjectType);
      }
      if (AreaType != 0) {
        size += 1 + pb::CodedOutputStream.ComputeUInt32Size(AreaType);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(S2CDestoryObjectNoti other) {
      if (other == null) {
        return;
      }
      if (other.ObjectId != 0) {
        ObjectId = other.ObjectId;
      }
      if (other.ObjectType != 0) {
        ObjectType = other.ObjectType;
      }
      if (other.AreaType != 0) {
        AreaType = other.AreaType;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 8: {
            ObjectId = input.ReadUInt32();
            break;
          }
          case 16: {
            ObjectType = input.ReadUInt32();
            break;
          }
          case 24: {
            AreaType = input.ReadUInt32();
            break;
          }
        }
      }
    }

  }

  /// <summary>
  /// 전장 유닛 동기화 (변동사항만 보냄)
  /// </summary>
  public sealed partial class S2CSyncFieldUnitNoti : pb::IMessage<S2CSyncFieldUnitNoti> {
    private static readonly pb::MessageParser<S2CSyncFieldUnitNoti> _parser = new pb::MessageParser<S2CSyncFieldUnitNoti>(() => new S2CSyncFieldUnitNoti());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<S2CSyncFieldUnitNoti> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Protocol.ProtocolReflection.Descriptor.MessageTypes[30]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public S2CSyncFieldUnitNoti() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public S2CSyncFieldUnitNoti(S2CSyncFieldUnitNoti other) : this() {
      object_ = other.object_.Clone();
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public S2CSyncFieldUnitNoti Clone() {
      return new S2CSyncFieldUnitNoti(this);
    }

    /// <summary>Field number for the "Object" field.</summary>
    public const int ObjectFieldNumber = 1;
    private static readonly pb::FieldCodec<global::Protocol.FieldUnit> _repeated_object_codec
        = pb::FieldCodec.ForMessage(10, global::Protocol.FieldUnit.Parser);
    private readonly pbc::RepeatedField<global::Protocol.FieldUnit> object_ = new pbc::RepeatedField<global::Protocol.FieldUnit>();
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public pbc::RepeatedField<global::Protocol.FieldUnit> Object {
      get { return object_; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as S2CSyncFieldUnitNoti);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(S2CSyncFieldUnitNoti other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if(!object_.Equals(other.object_)) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      hash ^= object_.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      object_.WriteTo(output, _repeated_object_codec);
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      size += object_.CalculateSize(_repeated_object_codec);
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(S2CSyncFieldUnitNoti other) {
      if (other == null) {
        return;
      }
      object_.Add(other.object_);
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            object_.AddEntriesFrom(input, _repeated_object_codec);
            break;
          }
        }
      }
    }

  }

  /// <summary>
  /// 항복
  /// </summary>
  public sealed partial class C2SSurrenderReq : pb::IMessage<C2SSurrenderReq> {
    private static readonly pb::MessageParser<C2SSurrenderReq> _parser = new pb::MessageParser<C2SSurrenderReq>(() => new C2SSurrenderReq());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<C2SSurrenderReq> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Protocol.ProtocolReflection.Descriptor.MessageTypes[31]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public C2SSurrenderReq() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public C2SSurrenderReq(C2SSurrenderReq other) : this() {
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public C2SSurrenderReq Clone() {
      return new C2SSurrenderReq(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as C2SSurrenderReq);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(C2SSurrenderReq other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(C2SSurrenderReq other) {
      if (other == null) {
        return;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
        }
      }
    }

  }

  /// <summary>
  /// 자기 자신에게 알리기
  /// </summary>
  public sealed partial class S2CSurrenderRes : pb::IMessage<S2CSurrenderRes> {
    private static readonly pb::MessageParser<S2CSurrenderRes> _parser = new pb::MessageParser<S2CSurrenderRes>(() => new S2CSurrenderRes());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<S2CSurrenderRes> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Protocol.ProtocolReflection.Descriptor.MessageTypes[32]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public S2CSurrenderRes() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public S2CSurrenderRes(S2CSurrenderRes other) : this() {
      surrenderResultCode_ = other.surrenderResultCode_;
      surrenderStartTime_ = other.surrenderStartTime_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public S2CSurrenderRes Clone() {
      return new S2CSurrenderRes(this);
    }

    /// <summary>Field number for the "surrenderResultCode" field.</summary>
    public const int SurrenderResultCodeFieldNumber = 1;
    private uint surrenderResultCode_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public uint SurrenderResultCode {
      get { return surrenderResultCode_; }
      set {
        surrenderResultCode_ = value;
      }
    }

    /// <summary>Field number for the "surrenderStartTime" field.</summary>
    public const int SurrenderStartTimeFieldNumber = 2;
    private ulong surrenderStartTime_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public ulong SurrenderStartTime {
      get { return surrenderStartTime_; }
      set {
        surrenderStartTime_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as S2CSurrenderRes);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(S2CSurrenderRes other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (SurrenderResultCode != other.SurrenderResultCode) return false;
      if (SurrenderStartTime != other.SurrenderStartTime) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (SurrenderResultCode != 0) hash ^= SurrenderResultCode.GetHashCode();
      if (SurrenderStartTime != 0UL) hash ^= SurrenderStartTime.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (SurrenderResultCode != 0) {
        output.WriteRawTag(8);
        output.WriteUInt32(SurrenderResultCode);
      }
      if (SurrenderStartTime != 0UL) {
        output.WriteRawTag(16);
        output.WriteUInt64(SurrenderStartTime);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (SurrenderResultCode != 0) {
        size += 1 + pb::CodedOutputStream.ComputeUInt32Size(SurrenderResultCode);
      }
      if (SurrenderStartTime != 0UL) {
        size += 1 + pb::CodedOutputStream.ComputeUInt64Size(SurrenderStartTime);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(S2CSurrenderRes other) {
      if (other == null) {
        return;
      }
      if (other.SurrenderResultCode != 0) {
        SurrenderResultCode = other.SurrenderResultCode;
      }
      if (other.SurrenderStartTime != 0UL) {
        SurrenderStartTime = other.SurrenderStartTime;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 8: {
            SurrenderResultCode = input.ReadUInt32();
            break;
          }
          case 16: {
            SurrenderStartTime = input.ReadUInt64();
            break;
          }
        }
      }
    }

  }

  /// <summary>
  /// 팀 항복투표를 했다.
  /// </summary>
  public sealed partial class S2CSurrenderNoti : pb::IMessage<S2CSurrenderNoti> {
    private static readonly pb::MessageParser<S2CSurrenderNoti> _parser = new pb::MessageParser<S2CSurrenderNoti>(() => new S2CSurrenderNoti());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<S2CSurrenderNoti> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Protocol.ProtocolReflection.Descriptor.MessageTypes[33]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public S2CSurrenderNoti() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public S2CSurrenderNoti(S2CSurrenderNoti other) : this() {
      playerId_ = other.playerId_;
      surrenderStartTime_ = other.surrenderStartTime_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public S2CSurrenderNoti Clone() {
      return new S2CSurrenderNoti(this);
    }

    /// <summary>Field number for the "playerId" field.</summary>
    public const int PlayerIdFieldNumber = 1;
    private uint playerId_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public uint PlayerId {
      get { return playerId_; }
      set {
        playerId_ = value;
      }
    }

    /// <summary>Field number for the "surrenderStartTime" field.</summary>
    public const int SurrenderStartTimeFieldNumber = 2;
    private ulong surrenderStartTime_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public ulong SurrenderStartTime {
      get { return surrenderStartTime_; }
      set {
        surrenderStartTime_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as S2CSurrenderNoti);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(S2CSurrenderNoti other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (PlayerId != other.PlayerId) return false;
      if (SurrenderStartTime != other.SurrenderStartTime) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (PlayerId != 0) hash ^= PlayerId.GetHashCode();
      if (SurrenderStartTime != 0UL) hash ^= SurrenderStartTime.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (PlayerId != 0) {
        output.WriteRawTag(8);
        output.WriteUInt32(PlayerId);
      }
      if (SurrenderStartTime != 0UL) {
        output.WriteRawTag(16);
        output.WriteUInt64(SurrenderStartTime);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (PlayerId != 0) {
        size += 1 + pb::CodedOutputStream.ComputeUInt32Size(PlayerId);
      }
      if (SurrenderStartTime != 0UL) {
        size += 1 + pb::CodedOutputStream.ComputeUInt64Size(SurrenderStartTime);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(S2CSurrenderNoti other) {
      if (other == null) {
        return;
      }
      if (other.PlayerId != 0) {
        PlayerId = other.PlayerId;
      }
      if (other.SurrenderStartTime != 0UL) {
        SurrenderStartTime = other.SurrenderStartTime;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 8: {
            PlayerId = input.ReadUInt32();
            break;
          }
          case 16: {
            SurrenderStartTime = input.ReadUInt64();
            break;
          }
        }
      }
    }

  }

  /// <summary>
  /// 게임 종료 (게임 진행을 우리가 하고 있기 때문에 서버에서 먼저 보내줌)
  /// </summary>
  public sealed partial class S2CGameOverNoti : pb::IMessage<S2CGameOverNoti> {
    private static readonly pb::MessageParser<S2CGameOverNoti> _parser = new pb::MessageParser<S2CGameOverNoti>(() => new S2CGameOverNoti());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<S2CGameOverNoti> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Protocol.ProtocolReflection.Descriptor.MessageTypes[34]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public S2CGameOverNoti() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public S2CGameOverNoti(S2CGameOverNoti other) : this() {
      gameOverType_ = other.gameOverType_;
      teamIndex_ = other.teamIndex_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public S2CGameOverNoti Clone() {
      return new S2CGameOverNoti(this);
    }

    /// <summary>Field number for the "gameOverType" field.</summary>
    public const int GameOverTypeFieldNumber = 1;
    private uint gameOverType_;
    /// <summary>
    ///(어떠한 사유로 게임이 끝났는지)
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public uint GameOverType {
      get { return gameOverType_; }
      set {
        gameOverType_ = value;
      }
    }

    /// <summary>Field number for the "teamIndex" field.</summary>
    public const int TeamIndexFieldNumber = 2;
    private uint teamIndex_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public uint TeamIndex {
      get { return teamIndex_; }
      set {
        teamIndex_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as S2CGameOverNoti);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(S2CGameOverNoti other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (GameOverType != other.GameOverType) return false;
      if (TeamIndex != other.TeamIndex) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (GameOverType != 0) hash ^= GameOverType.GetHashCode();
      if (TeamIndex != 0) hash ^= TeamIndex.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (GameOverType != 0) {
        output.WriteRawTag(8);
        output.WriteUInt32(GameOverType);
      }
      if (TeamIndex != 0) {
        output.WriteRawTag(16);
        output.WriteUInt32(TeamIndex);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (GameOverType != 0) {
        size += 1 + pb::CodedOutputStream.ComputeUInt32Size(GameOverType);
      }
      if (TeamIndex != 0) {
        size += 1 + pb::CodedOutputStream.ComputeUInt32Size(TeamIndex);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(S2CGameOverNoti other) {
      if (other == null) {
        return;
      }
      if (other.GameOverType != 0) {
        GameOverType = other.GameOverType;
      }
      if (other.TeamIndex != 0) {
        TeamIndex = other.TeamIndex;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 8: {
            GameOverType = input.ReadUInt32();
            break;
          }
          case 16: {
            TeamIndex = input.ReadUInt32();
            break;
          }
        }
      }
    }

  }

  /// <summary>
  /// 공용맵 이동
  /// </summary>
  public sealed partial class C2SMoveToAreaMapReq : pb::IMessage<C2SMoveToAreaMapReq> {
    private static readonly pb::MessageParser<C2SMoveToAreaMapReq> _parser = new pb::MessageParser<C2SMoveToAreaMapReq>(() => new C2SMoveToAreaMapReq());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<C2SMoveToAreaMapReq> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Protocol.ProtocolReflection.Descriptor.MessageTypes[35]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public C2SMoveToAreaMapReq() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public C2SMoveToAreaMapReq(C2SMoveToAreaMapReq other) : this() {
      currentAreaType_ = other.currentAreaType_;
      destinationAreaType_ = other.destinationAreaType_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public C2SMoveToAreaMapReq Clone() {
      return new C2SMoveToAreaMapReq(this);
    }

    /// <summary>Field number for the "currentAreaType" field.</summary>
    public const int CurrentAreaTypeFieldNumber = 1;
    private uint currentAreaType_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public uint CurrentAreaType {
      get { return currentAreaType_; }
      set {
        currentAreaType_ = value;
      }
    }

    /// <summary>Field number for the "destinationAreaType" field.</summary>
    public const int DestinationAreaTypeFieldNumber = 2;
    private uint destinationAreaType_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public uint DestinationAreaType {
      get { return destinationAreaType_; }
      set {
        destinationAreaType_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as C2SMoveToAreaMapReq);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(C2SMoveToAreaMapReq other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (CurrentAreaType != other.CurrentAreaType) return false;
      if (DestinationAreaType != other.DestinationAreaType) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (CurrentAreaType != 0) hash ^= CurrentAreaType.GetHashCode();
      if (DestinationAreaType != 0) hash ^= DestinationAreaType.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (CurrentAreaType != 0) {
        output.WriteRawTag(8);
        output.WriteUInt32(CurrentAreaType);
      }
      if (DestinationAreaType != 0) {
        output.WriteRawTag(16);
        output.WriteUInt32(DestinationAreaType);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (CurrentAreaType != 0) {
        size += 1 + pb::CodedOutputStream.ComputeUInt32Size(CurrentAreaType);
      }
      if (DestinationAreaType != 0) {
        size += 1 + pb::CodedOutputStream.ComputeUInt32Size(DestinationAreaType);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(C2SMoveToAreaMapReq other) {
      if (other == null) {
        return;
      }
      if (other.CurrentAreaType != 0) {
        CurrentAreaType = other.CurrentAreaType;
      }
      if (other.DestinationAreaType != 0) {
        DestinationAreaType = other.DestinationAreaType;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 8: {
            CurrentAreaType = input.ReadUInt32();
            break;
          }
          case 16: {
            DestinationAreaType = input.ReadUInt32();
            break;
          }
        }
      }
    }

  }

  public sealed partial class S2CMoveToAreaMap : pb::IMessage<S2CMoveToAreaMap> {
    private static readonly pb::MessageParser<S2CMoveToAreaMap> _parser = new pb::MessageParser<S2CMoveToAreaMap>(() => new S2CMoveToAreaMap());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<S2CMoveToAreaMap> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Protocol.ProtocolReflection.Descriptor.MessageTypes[36]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public S2CMoveToAreaMap() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public S2CMoveToAreaMap(S2CMoveToAreaMap other) : this() {
      joinMapResultCode_ = other.joinMapResultCode_;
      position_ = other.position_ != null ? other.position_.Clone() : null;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public S2CMoveToAreaMap Clone() {
      return new S2CMoveToAreaMap(this);
    }

    /// <summary>Field number for the "joinMapResultCode" field.</summary>
    public const int JoinMapResultCodeFieldNumber = 1;
    private uint joinMapResultCode_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public uint JoinMapResultCode {
      get { return joinMapResultCode_; }
      set {
        joinMapResultCode_ = value;
      }
    }

    /// <summary>Field number for the "position" field.</summary>
    public const int PositionFieldNumber = 2;
    private global::Protocol.Position position_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::Protocol.Position Position {
      get { return position_; }
      set {
        position_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as S2CMoveToAreaMap);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(S2CMoveToAreaMap other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (JoinMapResultCode != other.JoinMapResultCode) return false;
      if (!object.Equals(Position, other.Position)) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (JoinMapResultCode != 0) hash ^= JoinMapResultCode.GetHashCode();
      if (position_ != null) hash ^= Position.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (JoinMapResultCode != 0) {
        output.WriteRawTag(8);
        output.WriteUInt32(JoinMapResultCode);
      }
      if (position_ != null) {
        output.WriteRawTag(18);
        output.WriteMessage(Position);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (JoinMapResultCode != 0) {
        size += 1 + pb::CodedOutputStream.ComputeUInt32Size(JoinMapResultCode);
      }
      if (position_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(Position);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(S2CMoveToAreaMap other) {
      if (other == null) {
        return;
      }
      if (other.JoinMapResultCode != 0) {
        JoinMapResultCode = other.JoinMapResultCode;
      }
      if (other.position_ != null) {
        if (position_ == null) {
          Position = new global::Protocol.Position();
        }
        Position.MergeFrom(other.Position);
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 8: {
            JoinMapResultCode = input.ReadUInt32();
            break;
          }
          case 18: {
            if (position_ == null) {
              Position = new global::Protocol.Position();
            }
            input.ReadMessage(Position);
            break;
          }
        }
      }
    }

  }

  /// <summary>
  /// 조합대 요청 (철 100, 단단한 목재도 100개, 핵도 100개)
  /// </summary>
  public sealed partial class C2SWorkbenchReq : pb::IMessage<C2SWorkbenchReq> {
    private static readonly pb::MessageParser<C2SWorkbenchReq> _parser = new pb::MessageParser<C2SWorkbenchReq>(() => new C2SWorkbenchReq());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<C2SWorkbenchReq> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Protocol.ProtocolReflection.Descriptor.MessageTypes[37]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public C2SWorkbenchReq() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public C2SWorkbenchReq(C2SWorkbenchReq other) : this() {
      resultItem_ = other.resultItem_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public C2SWorkbenchReq Clone() {
      return new C2SWorkbenchReq(this);
    }

    /// <summary>Field number for the "resultItem" field.</summary>
    public const int ResultItemFieldNumber = 1;
    private uint resultItem_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public uint ResultItem {
      get { return resultItem_; }
      set {
        resultItem_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as C2SWorkbenchReq);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(C2SWorkbenchReq other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (ResultItem != other.ResultItem) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (ResultItem != 0) hash ^= ResultItem.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (ResultItem != 0) {
        output.WriteRawTag(8);
        output.WriteUInt32(ResultItem);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (ResultItem != 0) {
        size += 1 + pb::CodedOutputStream.ComputeUInt32Size(ResultItem);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(C2SWorkbenchReq other) {
      if (other == null) {
        return;
      }
      if (other.ResultItem != 0) {
        ResultItem = other.ResultItem;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 8: {
            ResultItem = input.ReadUInt32();
            break;
          }
        }
      }
    }

  }

  public sealed partial class S2CWorkbenchRes : pb::IMessage<S2CWorkbenchRes> {
    private static readonly pb::MessageParser<S2CWorkbenchRes> _parser = new pb::MessageParser<S2CWorkbenchRes>(() => new S2CWorkbenchRes());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<S2CWorkbenchRes> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Protocol.ProtocolReflection.Descriptor.MessageTypes[38]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public S2CWorkbenchRes() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public S2CWorkbenchRes(S2CWorkbenchRes other) : this() {
      workbenchResultCode_ = other.workbenchResultCode_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public S2CWorkbenchRes Clone() {
      return new S2CWorkbenchRes(this);
    }

    /// <summary>Field number for the "workbenchResultCode" field.</summary>
    public const int WorkbenchResultCodeFieldNumber = 1;
    private uint workbenchResultCode_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public uint WorkbenchResultCode {
      get { return workbenchResultCode_; }
      set {
        workbenchResultCode_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as S2CWorkbenchRes);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(S2CWorkbenchRes other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (WorkbenchResultCode != other.WorkbenchResultCode) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (WorkbenchResultCode != 0) hash ^= WorkbenchResultCode.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (WorkbenchResultCode != 0) {
        output.WriteRawTag(8);
        output.WriteUInt32(WorkbenchResultCode);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (WorkbenchResultCode != 0) {
        size += 1 + pb::CodedOutputStream.ComputeUInt32Size(WorkbenchResultCode);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(S2CWorkbenchRes other) {
      if (other == null) {
        return;
      }
      if (other.WorkbenchResultCode != 0) {
        WorkbenchResultCode = other.WorkbenchResultCode;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 8: {
            WorkbenchResultCode = input.ReadUInt32();
            break;
          }
        }
      }
    }

  }

  /// <summary>
  /// 용광로
  /// </summary>
  public sealed partial class C2SFurnaceReq : pb::IMessage<C2SFurnaceReq> {
    private static readonly pb::MessageParser<C2SFurnaceReq> _parser = new pb::MessageParser<C2SFurnaceReq>(() => new C2SFurnaceReq());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<C2SFurnaceReq> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Protocol.ProtocolReflection.Descriptor.MessageTypes[39]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public C2SFurnaceReq() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public C2SFurnaceReq(C2SFurnaceReq other) : this() {
      item_ = other.item_ != null ? other.item_.Clone() : null;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public C2SFurnaceReq Clone() {
      return new C2SFurnaceReq(this);
    }

    /// <summary>Field number for the "item" field.</summary>
    public const int ItemFieldNumber = 1;
    private global::Protocol.ItemData item_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::Protocol.ItemData Item {
      get { return item_; }
      set {
        item_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as C2SFurnaceReq);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(C2SFurnaceReq other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (!object.Equals(Item, other.Item)) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (item_ != null) hash ^= Item.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (item_ != null) {
        output.WriteRawTag(10);
        output.WriteMessage(Item);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (item_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(Item);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(C2SFurnaceReq other) {
      if (other == null) {
        return;
      }
      if (other.item_ != null) {
        if (item_ == null) {
          Item = new global::Protocol.ItemData();
        }
        Item.MergeFrom(other.Item);
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            if (item_ == null) {
              Item = new global::Protocol.ItemData();
            }
            input.ReadMessage(Item);
            break;
          }
        }
      }
    }

  }

  public sealed partial class S2CFurnaceRes : pb::IMessage<S2CFurnaceRes> {
    private static readonly pb::MessageParser<S2CFurnaceRes> _parser = new pb::MessageParser<S2CFurnaceRes>(() => new S2CFurnaceRes());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<S2CFurnaceRes> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Protocol.ProtocolReflection.Descriptor.MessageTypes[40]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public S2CFurnaceRes() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public S2CFurnaceRes(S2CFurnaceRes other) : this() {
      furnaceResultCode_ = other.furnaceResultCode_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public S2CFurnaceRes Clone() {
      return new S2CFurnaceRes(this);
    }

    /// <summary>Field number for the "furnaceResultCode" field.</summary>
    public const int FurnaceResultCodeFieldNumber = 1;
    private uint furnaceResultCode_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public uint FurnaceResultCode {
      get { return furnaceResultCode_; }
      set {
        furnaceResultCode_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as S2CFurnaceRes);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(S2CFurnaceRes other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (FurnaceResultCode != other.FurnaceResultCode) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (FurnaceResultCode != 0) hash ^= FurnaceResultCode.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (FurnaceResultCode != 0) {
        output.WriteRawTag(8);
        output.WriteUInt32(FurnaceResultCode);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (FurnaceResultCode != 0) {
        size += 1 + pb::CodedOutputStream.ComputeUInt32Size(FurnaceResultCode);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(S2CFurnaceRes other) {
      if (other == null) {
        return;
      }
      if (other.FurnaceResultCode != 0) {
        FurnaceResultCode = other.FurnaceResultCode;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 8: {
            FurnaceResultCode = input.ReadUInt32();
            break;
          }
        }
      }
    }

  }

  /// <summary>
  /// 제제소
  /// </summary>
  public sealed partial class C2SSawmillReq : pb::IMessage<C2SSawmillReq> {
    private static readonly pb::MessageParser<C2SSawmillReq> _parser = new pb::MessageParser<C2SSawmillReq>(() => new C2SSawmillReq());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<C2SSawmillReq> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Protocol.ProtocolReflection.Descriptor.MessageTypes[41]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public C2SSawmillReq() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public C2SSawmillReq(C2SSawmillReq other) : this() {
      item_ = other.item_ != null ? other.item_.Clone() : null;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public C2SSawmillReq Clone() {
      return new C2SSawmillReq(this);
    }

    /// <summary>Field number for the "item" field.</summary>
    public const int ItemFieldNumber = 1;
    private global::Protocol.ItemData item_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::Protocol.ItemData Item {
      get { return item_; }
      set {
        item_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as C2SSawmillReq);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(C2SSawmillReq other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (!object.Equals(Item, other.Item)) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (item_ != null) hash ^= Item.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (item_ != null) {
        output.WriteRawTag(10);
        output.WriteMessage(Item);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (item_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(Item);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(C2SSawmillReq other) {
      if (other == null) {
        return;
      }
      if (other.item_ != null) {
        if (item_ == null) {
          Item = new global::Protocol.ItemData();
        }
        Item.MergeFrom(other.Item);
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            if (item_ == null) {
              Item = new global::Protocol.ItemData();
            }
            input.ReadMessage(Item);
            break;
          }
        }
      }
    }

  }

  public sealed partial class S2CSawmillRes : pb::IMessage<S2CSawmillRes> {
    private static readonly pb::MessageParser<S2CSawmillRes> _parser = new pb::MessageParser<S2CSawmillRes>(() => new S2CSawmillRes());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<S2CSawmillRes> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Protocol.ProtocolReflection.Descriptor.MessageTypes[42]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public S2CSawmillRes() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public S2CSawmillRes(S2CSawmillRes other) : this() {
      sawmillResultCode_ = other.sawmillResultCode_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public S2CSawmillRes Clone() {
      return new S2CSawmillRes(this);
    }

    /// <summary>Field number for the "sawmillResultCode" field.</summary>
    public const int SawmillResultCodeFieldNumber = 1;
    private uint sawmillResultCode_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public uint SawmillResultCode {
      get { return sawmillResultCode_; }
      set {
        sawmillResultCode_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as S2CSawmillRes);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(S2CSawmillRes other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (SawmillResultCode != other.SawmillResultCode) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (SawmillResultCode != 0) hash ^= SawmillResultCode.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (SawmillResultCode != 0) {
        output.WriteRawTag(8);
        output.WriteUInt32(SawmillResultCode);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (SawmillResultCode != 0) {
        size += 1 + pb::CodedOutputStream.ComputeUInt32Size(SawmillResultCode);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(S2CSawmillRes other) {
      if (other == null) {
        return;
      }
      if (other.SawmillResultCode != 0) {
        SawmillResultCode = other.SawmillResultCode;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 8: {
            SawmillResultCode = input.ReadUInt32();
            break;
          }
        }
      }
    }

  }

  /// <summary>
  /// 대기실 생성 요청
  /// </summary>
  public sealed partial class C2SCreateRoomReq : pb::IMessage<C2SCreateRoomReq> {
    private static readonly pb::MessageParser<C2SCreateRoomReq> _parser = new pb::MessageParser<C2SCreateRoomReq>(() => new C2SCreateRoomReq());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<C2SCreateRoomReq> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Protocol.ProtocolReflection.Descriptor.MessageTypes[43]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public C2SCreateRoomReq() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public C2SCreateRoomReq(C2SCreateRoomReq other) : this() {
      isPrivate_ = other.isPrivate_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public C2SCreateRoomReq Clone() {
      return new C2SCreateRoomReq(this);
    }

    /// <summary>Field number for the "isPrivate" field.</summary>
    public const int IsPrivateFieldNumber = 1;
    private bool isPrivate_;
    /// <summary>
    /// 비공개 방 여부 (true일때 private)
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool IsPrivate {
      get { return isPrivate_; }
      set {
        isPrivate_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as C2SCreateRoomReq);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(C2SCreateRoomReq other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (IsPrivate != other.IsPrivate) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (IsPrivate != false) hash ^= IsPrivate.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (IsPrivate != false) {
        output.WriteRawTag(8);
        output.WriteBool(IsPrivate);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (IsPrivate != false) {
        size += 1 + 1;
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(C2SCreateRoomReq other) {
      if (other == null) {
        return;
      }
      if (other.IsPrivate != false) {
        IsPrivate = other.IsPrivate;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 8: {
            IsPrivate = input.ReadBool();
            break;
          }
        }
      }
    }

  }

  /// <summary>
  /// 대기실 생성 결과
  /// </summary>
  public sealed partial class S2CCreateRoomRes : pb::IMessage<S2CCreateRoomRes> {
    private static readonly pb::MessageParser<S2CCreateRoomRes> _parser = new pb::MessageParser<S2CCreateRoomRes>(() => new S2CCreateRoomRes());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<S2CCreateRoomRes> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Protocol.ProtocolReflection.Descriptor.MessageTypes[44]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public S2CCreateRoomRes() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public S2CCreateRoomRes(S2CCreateRoomRes other) : this() {
      gameCode_ = other.gameCode_;
      gameUrl_ = other.gameUrl_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public S2CCreateRoomRes Clone() {
      return new S2CCreateRoomRes(this);
    }

    /// <summary>Field number for the "gameCode" field.</summary>
    public const int GameCodeFieldNumber = 1;
    private string gameCode_ = "";
    /// <summary>
    /// 방 코드
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string GameCode {
      get { return gameCode_; }
      set {
        gameCode_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "gameUrl" field.</summary>
    public const int GameUrlFieldNumber = 2;
    private string gameUrl_ = "";
    /// <summary>
    /// 게임 서버 URL (API GATEWAY 쓴다고 함)
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string GameUrl {
      get { return gameUrl_; }
      set {
        gameUrl_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as S2CCreateRoomRes);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(S2CCreateRoomRes other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (GameCode != other.GameCode) return false;
      if (GameUrl != other.GameUrl) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (GameCode.Length != 0) hash ^= GameCode.GetHashCode();
      if (GameUrl.Length != 0) hash ^= GameUrl.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (GameCode.Length != 0) {
        output.WriteRawTag(10);
        output.WriteString(GameCode);
      }
      if (GameUrl.Length != 0) {
        output.WriteRawTag(18);
        output.WriteString(GameUrl);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (GameCode.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(GameCode);
      }
      if (GameUrl.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(GameUrl);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(S2CCreateRoomRes other) {
      if (other == null) {
        return;
      }
      if (other.GameCode.Length != 0) {
        GameCode = other.GameCode;
      }
      if (other.GameUrl.Length != 0) {
        GameUrl = other.GameUrl;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            GameCode = input.ReadString();
            break;
          }
          case 18: {
            GameUrl = input.ReadString();
            break;
          }
        }
      }
    }

  }

  /// <summary>
  /// 대기실 매칭 취소
  /// </summary>
  public sealed partial class C2SMatchCancelReq : pb::IMessage<C2SMatchCancelReq> {
    private static readonly pb::MessageParser<C2SMatchCancelReq> _parser = new pb::MessageParser<C2SMatchCancelReq>(() => new C2SMatchCancelReq());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<C2SMatchCancelReq> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Protocol.ProtocolReflection.Descriptor.MessageTypes[45]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public C2SMatchCancelReq() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public C2SMatchCancelReq(C2SMatchCancelReq other) : this() {
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public C2SMatchCancelReq Clone() {
      return new C2SMatchCancelReq(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as C2SMatchCancelReq);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(C2SMatchCancelReq other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(C2SMatchCancelReq other) {
      if (other == null) {
        return;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
        }
      }
    }

  }

  /// <summary>
  /// 대기실 매칭 취소 응답
  /// </summary>
  public sealed partial class S2CMatchCancelRes : pb::IMessage<S2CMatchCancelRes> {
    private static readonly pb::MessageParser<S2CMatchCancelRes> _parser = new pb::MessageParser<S2CMatchCancelRes>(() => new S2CMatchCancelRes());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<S2CMatchCancelRes> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Protocol.ProtocolReflection.Descriptor.MessageTypes[46]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public S2CMatchCancelRes() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public S2CMatchCancelRes(S2CMatchCancelRes other) : this() {
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public S2CMatchCancelRes Clone() {
      return new S2CMatchCancelRes(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as S2CMatchCancelRes);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(S2CMatchCancelRes other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(S2CMatchCancelRes other) {
      if (other == null) {
        return;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
        }
      }
    }

  }

  /// <summary>
  /// 대기실 매칭 요청 (anyway public 방만)
  /// </summary>
  public sealed partial class C2SMatchReq : pb::IMessage<C2SMatchReq> {
    private static readonly pb::MessageParser<C2SMatchReq> _parser = new pb::MessageParser<C2SMatchReq>(() => new C2SMatchReq());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<C2SMatchReq> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Protocol.ProtocolReflection.Descriptor.MessageTypes[47]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public C2SMatchReq() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public C2SMatchReq(C2SMatchReq other) : this() {
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public C2SMatchReq Clone() {
      return new C2SMatchReq(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as C2SMatchReq);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(C2SMatchReq other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(C2SMatchReq other) {
      if (other == null) {
        return;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
        }
      }
    }

  }

  /// <summary>
  /// 대기실 매칭 응답
  /// </summary>
  public sealed partial class S2CMatchRes : pb::IMessage<S2CMatchRes> {
    private static readonly pb::MessageParser<S2CMatchRes> _parser = new pb::MessageParser<S2CMatchRes>(() => new S2CMatchRes());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<S2CMatchRes> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Protocol.ProtocolReflection.Descriptor.MessageTypes[48]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public S2CMatchRes() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public S2CMatchRes(S2CMatchRes other) : this() {
      roomMatchResultCode_ = other.roomMatchResultCode_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public S2CMatchRes Clone() {
      return new S2CMatchRes(this);
    }

    /// <summary>Field number for the "roomMatchResultCode" field.</summary>
    public const int RoomMatchResultCodeFieldNumber = 1;
    private uint roomMatchResultCode_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public uint RoomMatchResultCode {
      get { return roomMatchResultCode_; }
      set {
        roomMatchResultCode_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as S2CMatchRes);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(S2CMatchRes other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (RoomMatchResultCode != other.RoomMatchResultCode) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (RoomMatchResultCode != 0) hash ^= RoomMatchResultCode.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (RoomMatchResultCode != 0) {
        output.WriteRawTag(8);
        output.WriteUInt32(RoomMatchResultCode);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (RoomMatchResultCode != 0) {
        size += 1 + pb::CodedOutputStream.ComputeUInt32Size(RoomMatchResultCode);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(S2CMatchRes other) {
      if (other == null) {
        return;
      }
      if (other.RoomMatchResultCode != 0) {
        RoomMatchResultCode = other.RoomMatchResultCode;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 8: {
            RoomMatchResultCode = input.ReadUInt32();
            break;
          }
        }
      }
    }

  }

  /// <summary>
  /// 대기실 매칭 진행상황 (주기적으로 알려줘야함)
  /// </summary>
  public sealed partial class S2CMatchProgressNoti : pb::IMessage<S2CMatchProgressNoti> {
    private static readonly pb::MessageParser<S2CMatchProgressNoti> _parser = new pb::MessageParser<S2CMatchProgressNoti>(() => new S2CMatchProgressNoti());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<S2CMatchProgressNoti> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Protocol.ProtocolReflection.Descriptor.MessageTypes[49]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public S2CMatchProgressNoti() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public S2CMatchProgressNoti(S2CMatchProgressNoti other) : this() {
      matchProgressCode_ = other.matchProgressCode_;
      elapsedTime_ = other.elapsedTime_;
      gameUrl_ = other.gameUrl_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public S2CMatchProgressNoti Clone() {
      return new S2CMatchProgressNoti(this);
    }

    /// <summary>Field number for the "matchProgressCode" field.</summary>
    public const int MatchProgressCodeFieldNumber = 1;
    private uint matchProgressCode_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public uint MatchProgressCode {
      get { return matchProgressCode_; }
      set {
        matchProgressCode_ = value;
      }
    }

    /// <summary>Field number for the "elapsedTime" field.</summary>
    public const int ElapsedTimeFieldNumber = 2;
    private ulong elapsedTime_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public ulong ElapsedTime {
      get { return elapsedTime_; }
      set {
        elapsedTime_ = value;
      }
    }

    /// <summary>Field number for the "gameUrl" field.</summary>
    public const int GameUrlFieldNumber = 3;
    private string gameUrl_ = "";
    /// <summary>
    /// 매칭이 완료되면 gameUrl을 넣어줘야함.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string GameUrl {
      get { return gameUrl_; }
      set {
        gameUrl_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as S2CMatchProgressNoti);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(S2CMatchProgressNoti other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (MatchProgressCode != other.MatchProgressCode) return false;
      if (ElapsedTime != other.ElapsedTime) return false;
      if (GameUrl != other.GameUrl) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (MatchProgressCode != 0) hash ^= MatchProgressCode.GetHashCode();
      if (ElapsedTime != 0UL) hash ^= ElapsedTime.GetHashCode();
      if (GameUrl.Length != 0) hash ^= GameUrl.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (MatchProgressCode != 0) {
        output.WriteRawTag(8);
        output.WriteUInt32(MatchProgressCode);
      }
      if (ElapsedTime != 0UL) {
        output.WriteRawTag(16);
        output.WriteUInt64(ElapsedTime);
      }
      if (GameUrl.Length != 0) {
        output.WriteRawTag(26);
        output.WriteString(GameUrl);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (MatchProgressCode != 0) {
        size += 1 + pb::CodedOutputStream.ComputeUInt32Size(MatchProgressCode);
      }
      if (ElapsedTime != 0UL) {
        size += 1 + pb::CodedOutputStream.ComputeUInt64Size(ElapsedTime);
      }
      if (GameUrl.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(GameUrl);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(S2CMatchProgressNoti other) {
      if (other == null) {
        return;
      }
      if (other.MatchProgressCode != 0) {
        MatchProgressCode = other.MatchProgressCode;
      }
      if (other.ElapsedTime != 0UL) {
        ElapsedTime = other.ElapsedTime;
      }
      if (other.GameUrl.Length != 0) {
        GameUrl = other.GameUrl;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 8: {
            MatchProgressCode = input.ReadUInt32();
            break;
          }
          case 16: {
            ElapsedTime = input.ReadUInt64();
            break;
          }
          case 26: {
            GameUrl = input.ReadString();
            break;
          }
        }
      }
    }

  }

  /// <summary>
  /// 대기실 입장 요청 (private 일때 만)
  /// </summary>
  public sealed partial class C2SJoinRoomReq : pb::IMessage<C2SJoinRoomReq> {
    private static readonly pb::MessageParser<C2SJoinRoomReq> _parser = new pb::MessageParser<C2SJoinRoomReq>(() => new C2SJoinRoomReq());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<C2SJoinRoomReq> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Protocol.ProtocolReflection.Descriptor.MessageTypes[50]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public C2SJoinRoomReq() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public C2SJoinRoomReq(C2SJoinRoomReq other) : this() {
      gameCode_ = other.gameCode_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public C2SJoinRoomReq Clone() {
      return new C2SJoinRoomReq(this);
    }

    /// <summary>Field number for the "gameCode" field.</summary>
    public const int GameCodeFieldNumber = 1;
    private string gameCode_ = "";
    /// <summary>
    /// null 불가능
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string GameCode {
      get { return gameCode_; }
      set {
        gameCode_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as C2SJoinRoomReq);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(C2SJoinRoomReq other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (GameCode != other.GameCode) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (GameCode.Length != 0) hash ^= GameCode.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (GameCode.Length != 0) {
        output.WriteRawTag(10);
        output.WriteString(GameCode);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (GameCode.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(GameCode);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(C2SJoinRoomReq other) {
      if (other == null) {
        return;
      }
      if (other.GameCode.Length != 0) {
        GameCode = other.GameCode;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            GameCode = input.ReadString();
            break;
          }
        }
      }
    }

  }

  public sealed partial class S2CJoinRoomRes : pb::IMessage<S2CJoinRoomRes> {
    private static readonly pb::MessageParser<S2CJoinRoomRes> _parser = new pb::MessageParser<S2CJoinRoomRes>(() => new S2CJoinRoomRes());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<S2CJoinRoomRes> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Protocol.ProtocolReflection.Descriptor.MessageTypes[51]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public S2CJoinRoomRes() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public S2CJoinRoomRes(S2CJoinRoomRes other) : this() {
      joinRoomResultCode_ = other.joinRoomResultCode_;
      gameUrl_ = other.gameUrl_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public S2CJoinRoomRes Clone() {
      return new S2CJoinRoomRes(this);
    }

    /// <summary>Field number for the "joinRoomResultCode" field.</summary>
    public const int JoinRoomResultCodeFieldNumber = 1;
    private uint joinRoomResultCode_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public uint JoinRoomResultCode {
      get { return joinRoomResultCode_; }
      set {
        joinRoomResultCode_ = value;
      }
    }

    /// <summary>Field number for the "gameUrl" field.</summary>
    public const int GameUrlFieldNumber = 2;
    private string gameUrl_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string GameUrl {
      get { return gameUrl_; }
      set {
        gameUrl_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as S2CJoinRoomRes);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(S2CJoinRoomRes other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (JoinRoomResultCode != other.JoinRoomResultCode) return false;
      if (GameUrl != other.GameUrl) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (JoinRoomResultCode != 0) hash ^= JoinRoomResultCode.GetHashCode();
      if (GameUrl.Length != 0) hash ^= GameUrl.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (JoinRoomResultCode != 0) {
        output.WriteRawTag(8);
        output.WriteUInt32(JoinRoomResultCode);
      }
      if (GameUrl.Length != 0) {
        output.WriteRawTag(18);
        output.WriteString(GameUrl);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (JoinRoomResultCode != 0) {
        size += 1 + pb::CodedOutputStream.ComputeUInt32Size(JoinRoomResultCode);
      }
      if (GameUrl.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(GameUrl);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(S2CJoinRoomRes other) {
      if (other == null) {
        return;
      }
      if (other.JoinRoomResultCode != 0) {
        JoinRoomResultCode = other.JoinRoomResultCode;
      }
      if (other.GameUrl.Length != 0) {
        GameUrl = other.GameUrl;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 8: {
            JoinRoomResultCode = input.ReadUInt32();
            break;
          }
          case 18: {
            GameUrl = input.ReadString();
            break;
          }
        }
      }
    }

  }

  /// <summary>
  /// 대기실 나가기 요청
  /// </summary>
  public sealed partial class C2SQuitRoomReq : pb::IMessage<C2SQuitRoomReq> {
    private static readonly pb::MessageParser<C2SQuitRoomReq> _parser = new pb::MessageParser<C2SQuitRoomReq>(() => new C2SQuitRoomReq());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<C2SQuitRoomReq> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Protocol.ProtocolReflection.Descriptor.MessageTypes[52]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public C2SQuitRoomReq() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public C2SQuitRoomReq(C2SQuitRoomReq other) : this() {
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public C2SQuitRoomReq Clone() {
      return new C2SQuitRoomReq(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as C2SQuitRoomReq);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(C2SQuitRoomReq other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(C2SQuitRoomReq other) {
      if (other == null) {
        return;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
        }
      }
    }

  }

  /// <summary>
  /// 대기실 나가기 알리기
  /// </summary>
  public sealed partial class S2CQuitRoomNoti : pb::IMessage<S2CQuitRoomNoti> {
    private static readonly pb::MessageParser<S2CQuitRoomNoti> _parser = new pb::MessageParser<S2CQuitRoomNoti>(() => new S2CQuitRoomNoti());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<S2CQuitRoomNoti> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Protocol.ProtocolReflection.Descriptor.MessageTypes[53]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public S2CQuitRoomNoti() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public S2CQuitRoomNoti(S2CQuitRoomNoti other) : this() {
      playerId_ = other.playerId_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public S2CQuitRoomNoti Clone() {
      return new S2CQuitRoomNoti(this);
    }

    /// <summary>Field number for the "playerId" field.</summary>
    public const int PlayerIdFieldNumber = 1;
    private uint playerId_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public uint PlayerId {
      get { return playerId_; }
      set {
        playerId_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as S2CQuitRoomNoti);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(S2CQuitRoomNoti other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (PlayerId != other.PlayerId) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (PlayerId != 0) hash ^= PlayerId.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (PlayerId != 0) {
        output.WriteRawTag(8);
        output.WriteUInt32(PlayerId);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (PlayerId != 0) {
        size += 1 + pb::CodedOutputStream.ComputeUInt32Size(PlayerId);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(S2CQuitRoomNoti other) {
      if (other == null) {
        return;
      }
      if (other.PlayerId != 0) {
        PlayerId = other.PlayerId;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 8: {
            PlayerId = input.ReadUInt32();
            break;
          }
        }
      }
    }

  }

  /// <summary>
  /// 팀 변경 요청 (자신이 팀을 직접 변경)
  /// </summary>
  public sealed partial class C2STeamChangeReq : pb::IMessage<C2STeamChangeReq> {
    private static readonly pb::MessageParser<C2STeamChangeReq> _parser = new pb::MessageParser<C2STeamChangeReq>(() => new C2STeamChangeReq());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<C2STeamChangeReq> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Protocol.ProtocolReflection.Descriptor.MessageTypes[54]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public C2STeamChangeReq() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public C2STeamChangeReq(C2STeamChangeReq other) : this() {
      teamIndex_ = other.teamIndex_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public C2STeamChangeReq Clone() {
      return new C2STeamChangeReq(this);
    }

    /// <summary>Field number for the "teamIndex" field.</summary>
    public const int TeamIndexFieldNumber = 1;
    private uint teamIndex_;
    /// <summary>
    /// 팀 변경
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public uint TeamIndex {
      get { return teamIndex_; }
      set {
        teamIndex_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as C2STeamChangeReq);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(C2STeamChangeReq other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (TeamIndex != other.TeamIndex) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (TeamIndex != 0) hash ^= TeamIndex.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (TeamIndex != 0) {
        output.WriteRawTag(8);
        output.WriteUInt32(TeamIndex);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (TeamIndex != 0) {
        size += 1 + pb::CodedOutputStream.ComputeUInt32Size(TeamIndex);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(C2STeamChangeReq other) {
      if (other == null) {
        return;
      }
      if (other.TeamIndex != 0) {
        TeamIndex = other.TeamIndex;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 8: {
            TeamIndex = input.ReadUInt32();
            break;
          }
        }
      }
    }

  }

  /// <summary>
  /// 팀 변경 결과 (자기 자신에게)
  /// </summary>
  public sealed partial class S2CTeamChangeRes : pb::IMessage<S2CTeamChangeRes> {
    private static readonly pb::MessageParser<S2CTeamChangeRes> _parser = new pb::MessageParser<S2CTeamChangeRes>(() => new S2CTeamChangeRes());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<S2CTeamChangeRes> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Protocol.ProtocolReflection.Descriptor.MessageTypes[55]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public S2CTeamChangeRes() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public S2CTeamChangeRes(S2CTeamChangeRes other) : this() {
      teamChangeResultCode_ = other.teamChangeResultCode_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public S2CTeamChangeRes Clone() {
      return new S2CTeamChangeRes(this);
    }

    /// <summary>Field number for the "teamChangeResultCode" field.</summary>
    public const int TeamChangeResultCodeFieldNumber = 1;
    private uint teamChangeResultCode_;
    /// <summary>
    /// 0이면 성공
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public uint TeamChangeResultCode {
      get { return teamChangeResultCode_; }
      set {
        teamChangeResultCode_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as S2CTeamChangeRes);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(S2CTeamChangeRes other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (TeamChangeResultCode != other.TeamChangeResultCode) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (TeamChangeResultCode != 0) hash ^= TeamChangeResultCode.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (TeamChangeResultCode != 0) {
        output.WriteRawTag(8);
        output.WriteUInt32(TeamChangeResultCode);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (TeamChangeResultCode != 0) {
        size += 1 + pb::CodedOutputStream.ComputeUInt32Size(TeamChangeResultCode);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(S2CTeamChangeRes other) {
      if (other == null) {
        return;
      }
      if (other.TeamChangeResultCode != 0) {
        TeamChangeResultCode = other.TeamChangeResultCode;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 8: {
            TeamChangeResultCode = input.ReadUInt32();
            break;
          }
        }
      }
    }

  }

  /// <summary>
  /// 대기실 입장 알리기 (팀 변경 결과에서도 Sync로 보내줌)
  /// </summary>
  public sealed partial class S2CSyncRoomNoti : pb::IMessage<S2CSyncRoomNoti> {
    private static readonly pb::MessageParser<S2CSyncRoomNoti> _parser = new pb::MessageParser<S2CSyncRoomNoti>(() => new S2CSyncRoomNoti());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<S2CSyncRoomNoti> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Protocol.ProtocolReflection.Descriptor.MessageTypes[56]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public S2CSyncRoomNoti() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public S2CSyncRoomNoti(S2CSyncRoomNoti other) : this() {
      players_ = other.players_.Clone();
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public S2CSyncRoomNoti Clone() {
      return new S2CSyncRoomNoti(this);
    }

    /// <summary>Field number for the "players" field.</summary>
    public const int PlayersFieldNumber = 1;
    private static readonly pb::FieldCodec<global::Protocol.PlayerRoomInfo> _repeated_players_codec
        = pb::FieldCodec.ForMessage(10, global::Protocol.PlayerRoomInfo.Parser);
    private readonly pbc::RepeatedField<global::Protocol.PlayerRoomInfo> players_ = new pbc::RepeatedField<global::Protocol.PlayerRoomInfo>();
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public pbc::RepeatedField<global::Protocol.PlayerRoomInfo> Players {
      get { return players_; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as S2CSyncRoomNoti);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(S2CSyncRoomNoti other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if(!players_.Equals(other.players_)) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      hash ^= players_.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      players_.WriteTo(output, _repeated_players_codec);
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      size += players_.CalculateSize(_repeated_players_codec);
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(S2CSyncRoomNoti other) {
      if (other == null) {
        return;
      }
      players_.Add(other.players_);
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            players_.AddEntriesFrom(input, _repeated_players_codec);
            break;
          }
        }
      }
    }

  }

  /// <summary>
  /// 플레이어 준비 완료
  /// </summary>
  public sealed partial class C2SPlayerIsReadyChangeReq : pb::IMessage<C2SPlayerIsReadyChangeReq> {
    private static readonly pb::MessageParser<C2SPlayerIsReadyChangeReq> _parser = new pb::MessageParser<C2SPlayerIsReadyChangeReq>(() => new C2SPlayerIsReadyChangeReq());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<C2SPlayerIsReadyChangeReq> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Protocol.ProtocolReflection.Descriptor.MessageTypes[57]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public C2SPlayerIsReadyChangeReq() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public C2SPlayerIsReadyChangeReq(C2SPlayerIsReadyChangeReq other) : this() {
      ready_ = other.ready_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public C2SPlayerIsReadyChangeReq Clone() {
      return new C2SPlayerIsReadyChangeReq(this);
    }

    /// <summary>Field number for the "ready" field.</summary>
    public const int ReadyFieldNumber = 1;
    private bool ready_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Ready {
      get { return ready_; }
      set {
        ready_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as C2SPlayerIsReadyChangeReq);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(C2SPlayerIsReadyChangeReq other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (Ready != other.Ready) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (Ready != false) hash ^= Ready.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (Ready != false) {
        output.WriteRawTag(8);
        output.WriteBool(Ready);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (Ready != false) {
        size += 1 + 1;
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(C2SPlayerIsReadyChangeReq other) {
      if (other == null) {
        return;
      }
      if (other.Ready != false) {
        Ready = other.Ready;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 8: {
            Ready = input.ReadBool();
            break;
          }
        }
      }
    }

  }

  /// <summary>
  /// 플레이어 준비 완료
  /// </summary>
  public sealed partial class S2CPlayerIsReadyChangeRes : pb::IMessage<S2CPlayerIsReadyChangeRes> {
    private static readonly pb::MessageParser<S2CPlayerIsReadyChangeRes> _parser = new pb::MessageParser<S2CPlayerIsReadyChangeRes>(() => new S2CPlayerIsReadyChangeRes());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<S2CPlayerIsReadyChangeRes> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Protocol.ProtocolReflection.Descriptor.MessageTypes[58]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public S2CPlayerIsReadyChangeRes() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public S2CPlayerIsReadyChangeRes(S2CPlayerIsReadyChangeRes other) : this() {
      playerIsReadyChangeResultCode_ = other.playerIsReadyChangeResultCode_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public S2CPlayerIsReadyChangeRes Clone() {
      return new S2CPlayerIsReadyChangeRes(this);
    }

    /// <summary>Field number for the "playerIsReadyChangeResultCode" field.</summary>
    public const int PlayerIsReadyChangeResultCodeFieldNumber = 1;
    private uint playerIsReadyChangeResultCode_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public uint PlayerIsReadyChangeResultCode {
      get { return playerIsReadyChangeResultCode_; }
      set {
        playerIsReadyChangeResultCode_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as S2CPlayerIsReadyChangeRes);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(S2CPlayerIsReadyChangeRes other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (PlayerIsReadyChangeResultCode != other.PlayerIsReadyChangeResultCode) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (PlayerIsReadyChangeResultCode != 0) hash ^= PlayerIsReadyChangeResultCode.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (PlayerIsReadyChangeResultCode != 0) {
        output.WriteRawTag(8);
        output.WriteUInt32(PlayerIsReadyChangeResultCode);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (PlayerIsReadyChangeResultCode != 0) {
        size += 1 + pb::CodedOutputStream.ComputeUInt32Size(PlayerIsReadyChangeResultCode);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(S2CPlayerIsReadyChangeRes other) {
      if (other == null) {
        return;
      }
      if (other.PlayerIsReadyChangeResultCode != 0) {
        PlayerIsReadyChangeResultCode = other.PlayerIsReadyChangeResultCode;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 8: {
            PlayerIsReadyChangeResultCode = input.ReadUInt32();
            break;
          }
        }
      }
    }

  }

  /// <summary>
  /// 게임 시작 요청 (준비 완료)
  /// </summary>
  public sealed partial class C2SGameStartReq : pb::IMessage<C2SGameStartReq> {
    private static readonly pb::MessageParser<C2SGameStartReq> _parser = new pb::MessageParser<C2SGameStartReq>(() => new C2SGameStartReq());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<C2SGameStartReq> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Protocol.ProtocolReflection.Descriptor.MessageTypes[59]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public C2SGameStartReq() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public C2SGameStartReq(C2SGameStartReq other) : this() {
      ready_ = other.ready_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public C2SGameStartReq Clone() {
      return new C2SGameStartReq(this);
    }

    /// <summary>Field number for the "ready" field.</summary>
    public const int ReadyFieldNumber = 1;
    private bool ready_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Ready {
      get { return ready_; }
      set {
        ready_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as C2SGameStartReq);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(C2SGameStartReq other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (Ready != other.Ready) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (Ready != false) hash ^= Ready.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (Ready != false) {
        output.WriteRawTag(8);
        output.WriteBool(Ready);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (Ready != false) {
        size += 1 + 1;
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(C2SGameStartReq other) {
      if (other == null) {
        return;
      }
      if (other.Ready != false) {
        Ready = other.Ready;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 8: {
            Ready = input.ReadBool();
            break;
          }
        }
      }
    }

  }

  /// <summary>
  /// 게임 시작 결과 (준비 완료)
  /// </summary>
  public sealed partial class S2CGameStartNoti : pb::IMessage<S2CGameStartNoti> {
    private static readonly pb::MessageParser<S2CGameStartNoti> _parser = new pb::MessageParser<S2CGameStartNoti>(() => new S2CGameStartNoti());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<S2CGameStartNoti> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Protocol.ProtocolReflection.Descriptor.MessageTypes[60]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public S2CGameStartNoti() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public S2CGameStartNoti(S2CGameStartNoti other) : this() {
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public S2CGameStartNoti Clone() {
      return new S2CGameStartNoti(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as S2CGameStartNoti);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(S2CGameStartNoti other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(S2CGameStartNoti other) {
      if (other == null) {
        return;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
        }
      }
    }

  }

  /// <summary>
  /// 로딩 진행도 (해당 게임 세션에 들어와 있는 애들한테 Noti)
  /// </summary>
  public sealed partial class C2SLoadProgressNoti : pb::IMessage<C2SLoadProgressNoti> {
    private static readonly pb::MessageParser<C2SLoadProgressNoti> _parser = new pb::MessageParser<C2SLoadProgressNoti>(() => new C2SLoadProgressNoti());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<C2SLoadProgressNoti> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Protocol.ProtocolReflection.Descriptor.MessageTypes[61]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public C2SLoadProgressNoti() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public C2SLoadProgressNoti(C2SLoadProgressNoti other) : this() {
      progress_ = other.progress_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public C2SLoadProgressNoti Clone() {
      return new C2SLoadProgressNoti(this);
    }

    /// <summary>Field number for the "progress" field.</summary>
    public const int ProgressFieldNumber = 1;
    private uint progress_;
    /// <summary>
    /// 0~100 백분율
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public uint Progress {
      get { return progress_; }
      set {
        progress_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as C2SLoadProgressNoti);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(C2SLoadProgressNoti other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (Progress != other.Progress) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (Progress != 0) hash ^= Progress.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (Progress != 0) {
        output.WriteRawTag(8);
        output.WriteUInt32(Progress);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (Progress != 0) {
        size += 1 + pb::CodedOutputStream.ComputeUInt32Size(Progress);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(C2SLoadProgressNoti other) {
      if (other == null) {
        return;
      }
      if (other.Progress != 0) {
        Progress = other.Progress;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 8: {
            Progress = input.ReadUInt32();
            break;
          }
        }
      }
    }

  }

  /// <summary>
  /// 로딩 동기화 알림 (누가 얼마나 진행되고 있는지)
  /// </summary>
  public sealed partial class S2CSyncLoadNoti : pb::IMessage<S2CSyncLoadNoti> {
    private static readonly pb::MessageParser<S2CSyncLoadNoti> _parser = new pb::MessageParser<S2CSyncLoadNoti>(() => new S2CSyncLoadNoti());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<S2CSyncLoadNoti> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Protocol.ProtocolReflection.Descriptor.MessageTypes[62]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public S2CSyncLoadNoti() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public S2CSyncLoadNoti(S2CSyncLoadNoti other) : this() {
      syncLoadData_ = other.syncLoadData_.Clone();
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public S2CSyncLoadNoti Clone() {
      return new S2CSyncLoadNoti(this);
    }

    /// <summary>Field number for the "syncLoadData" field.</summary>
    public const int SyncLoadDataFieldNumber = 1;
    private static readonly pb::FieldCodec<global::Protocol.S2CSyncLoadNoti.Types.SyncLoadData> _repeated_syncLoadData_codec
        = pb::FieldCodec.ForMessage(10, global::Protocol.S2CSyncLoadNoti.Types.SyncLoadData.Parser);
    private readonly pbc::RepeatedField<global::Protocol.S2CSyncLoadNoti.Types.SyncLoadData> syncLoadData_ = new pbc::RepeatedField<global::Protocol.S2CSyncLoadNoti.Types.SyncLoadData>();
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public pbc::RepeatedField<global::Protocol.S2CSyncLoadNoti.Types.SyncLoadData> SyncLoadData {
      get { return syncLoadData_; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as S2CSyncLoadNoti);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(S2CSyncLoadNoti other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if(!syncLoadData_.Equals(other.syncLoadData_)) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      hash ^= syncLoadData_.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      syncLoadData_.WriteTo(output, _repeated_syncLoadData_codec);
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      size += syncLoadData_.CalculateSize(_repeated_syncLoadData_codec);
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(S2CSyncLoadNoti other) {
      if (other == null) {
        return;
      }
      syncLoadData_.Add(other.syncLoadData_);
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            syncLoadData_.AddEntriesFrom(input, _repeated_syncLoadData_codec);
            break;
          }
        }
      }
    }

    #region Nested types
    /// <summary>Container for nested types declared in the S2CSyncLoadNoti message type.</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static partial class Types {
      public sealed partial class SyncLoadData : pb::IMessage<SyncLoadData> {
        private static readonly pb::MessageParser<SyncLoadData> _parser = new pb::MessageParser<SyncLoadData>(() => new SyncLoadData());
        private pb::UnknownFieldSet _unknownFields;
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public static pb::MessageParser<SyncLoadData> Parser { get { return _parser; } }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public static pbr::MessageDescriptor Descriptor {
          get { return global::Protocol.S2CSyncLoadNoti.Descriptor.NestedTypes[0]; }
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        pbr::MessageDescriptor pb::IMessage.Descriptor {
          get { return Descriptor; }
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public SyncLoadData() {
          OnConstruction();
        }

        partial void OnConstruction();

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public SyncLoadData(SyncLoadData other) : this() {
          playerId_ = other.playerId_;
          progress_ = other.progress_;
          _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public SyncLoadData Clone() {
          return new SyncLoadData(this);
        }

        /// <summary>Field number for the "playerId" field.</summary>
        public const int PlayerIdFieldNumber = 1;
        private uint playerId_;
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public uint PlayerId {
          get { return playerId_; }
          set {
            playerId_ = value;
          }
        }

        /// <summary>Field number for the "progress" field.</summary>
        public const int ProgressFieldNumber = 2;
        private uint progress_;
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public uint Progress {
          get { return progress_; }
          set {
            progress_ = value;
          }
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public override bool Equals(object other) {
          return Equals(other as SyncLoadData);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public bool Equals(SyncLoadData other) {
          if (ReferenceEquals(other, null)) {
            return false;
          }
          if (ReferenceEquals(other, this)) {
            return true;
          }
          if (PlayerId != other.PlayerId) return false;
          if (Progress != other.Progress) return false;
          return Equals(_unknownFields, other._unknownFields);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public override int GetHashCode() {
          int hash = 1;
          if (PlayerId != 0) hash ^= PlayerId.GetHashCode();
          if (Progress != 0) hash ^= Progress.GetHashCode();
          if (_unknownFields != null) {
            hash ^= _unknownFields.GetHashCode();
          }
          return hash;
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public override string ToString() {
          return pb::JsonFormatter.ToDiagnosticString(this);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public void WriteTo(pb::CodedOutputStream output) {
          if (PlayerId != 0) {
            output.WriteRawTag(8);
            output.WriteUInt32(PlayerId);
          }
          if (Progress != 0) {
            output.WriteRawTag(16);
            output.WriteUInt32(Progress);
          }
          if (_unknownFields != null) {
            _unknownFields.WriteTo(output);
          }
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public int CalculateSize() {
          int size = 0;
          if (PlayerId != 0) {
            size += 1 + pb::CodedOutputStream.ComputeUInt32Size(PlayerId);
          }
          if (Progress != 0) {
            size += 1 + pb::CodedOutputStream.ComputeUInt32Size(Progress);
          }
          if (_unknownFields != null) {
            size += _unknownFields.CalculateSize();
          }
          return size;
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public void MergeFrom(SyncLoadData other) {
          if (other == null) {
            return;
          }
          if (other.PlayerId != 0) {
            PlayerId = other.PlayerId;
          }
          if (other.Progress != 0) {
            Progress = other.Progress;
          }
          _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public void MergeFrom(pb::CodedInputStream input) {
          uint tag;
          while ((tag = input.ReadTag()) != 0) {
            switch(tag) {
              default:
                _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
                break;
              case 8: {
                PlayerId = input.ReadUInt32();
                break;
              }
              case 16: {
                Progress = input.ReadUInt32();
                break;
              }
            }
          }
        }

      }

    }
    #endregion

  }

  /// <summary>
  ///해당 패킷에 대해 빠진 페이로드 데이터 갯수를 알립니다.
  /// </summary>
  public sealed partial class S2CMissingFieldNoti : pb::IMessage<S2CMissingFieldNoti> {
    private static readonly pb::MessageParser<S2CMissingFieldNoti> _parser = new pb::MessageParser<S2CMissingFieldNoti>(() => new S2CMissingFieldNoti());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<S2CMissingFieldNoti> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Protocol.ProtocolReflection.Descriptor.MessageTypes[63]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public S2CMissingFieldNoti() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public S2CMissingFieldNoti(S2CMissingFieldNoti other) : this() {
      packetType_ = other.packetType_;
      missingFieldLength_ = other.missingFieldLength_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public S2CMissingFieldNoti Clone() {
      return new S2CMissingFieldNoti(this);
    }

    /// <summary>Field number for the "packetType" field.</summary>
    public const int PacketTypeFieldNumber = 1;
    private int packetType_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int PacketType {
      get { return packetType_; }
      set {
        packetType_ = value;
      }
    }

    /// <summary>Field number for the "missingFieldLength" field.</summary>
    public const int MissingFieldLengthFieldNumber = 2;
    private int missingFieldLength_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int MissingFieldLength {
      get { return missingFieldLength_; }
      set {
        missingFieldLength_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as S2CMissingFieldNoti);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(S2CMissingFieldNoti other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (PacketType != other.PacketType) return false;
      if (MissingFieldLength != other.MissingFieldLength) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (PacketType != 0) hash ^= PacketType.GetHashCode();
      if (MissingFieldLength != 0) hash ^= MissingFieldLength.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (PacketType != 0) {
        output.WriteRawTag(8);
        output.WriteInt32(PacketType);
      }
      if (MissingFieldLength != 0) {
        output.WriteRawTag(16);
        output.WriteInt32(MissingFieldLength);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (PacketType != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(PacketType);
      }
      if (MissingFieldLength != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(MissingFieldLength);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(S2CMissingFieldNoti other) {
      if (other == null) {
        return;
      }
      if (other.PacketType != 0) {
        PacketType = other.PacketType;
      }
      if (other.MissingFieldLength != 0) {
        MissingFieldLength = other.MissingFieldLength;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 8: {
            PacketType = input.ReadInt32();
            break;
          }
          case 16: {
            MissingFieldLength = input.ReadInt32();
            break;
          }
        }
      }
    }

  }

  /// <summary>
  ///게임 서버에서 인증없이 다른 패킷을 보냈을 때 반환되는 메세지
  /// </summary>
  public sealed partial class S2CNeedAuthorizeNoti : pb::IMessage<S2CNeedAuthorizeNoti> {
    private static readonly pb::MessageParser<S2CNeedAuthorizeNoti> _parser = new pb::MessageParser<S2CNeedAuthorizeNoti>(() => new S2CNeedAuthorizeNoti());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<S2CNeedAuthorizeNoti> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Protocol.ProtocolReflection.Descriptor.MessageTypes[64]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public S2CNeedAuthorizeNoti() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public S2CNeedAuthorizeNoti(S2CNeedAuthorizeNoti other) : this() {
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public S2CNeedAuthorizeNoti Clone() {
      return new S2CNeedAuthorizeNoti(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as S2CNeedAuthorizeNoti);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(S2CNeedAuthorizeNoti other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(S2CNeedAuthorizeNoti other) {
      if (other == null) {
        return;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
        }
      }
    }

  }

  #endregion

}

#endregion Designer generated code
